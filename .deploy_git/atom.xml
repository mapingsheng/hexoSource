<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>soujava</title>
  <subtitle>记录未知的，牢记已知的</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.soujava.com/"/>
  <updated>2016-08-17T03:41:28.778Z</updated>
  <id>http://www.soujava.com/</id>
  
  <author>
    <name>马平升</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java使用jxl读取excel数据时特殊符号处理</title>
    <link href="http://www.soujava.com/java%E4%BD%BF%E7%94%A8jxl%E8%AF%BB%E5%8F%96excel%E6%95%B0%E6%8D%AE%E6%97%B6%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E5%A4%84%E7%90%86/"/>
    <id>http://www.soujava.com/java使用jxl读取excel数据时特殊符号处理/</id>
    <published>2016-08-17T03:40:01.000Z</published>
    <updated>2016-08-17T03:41:28.778Z</updated>
    
    <content type="html">&lt;p&gt;使用JXL读取Excel中数据时，如果Excel中的单元格中有M1.5×6这样的值时，读取数据时，不能识别×，或者为乱码（？）。&lt;br&gt; 未处理之前代码：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;   Workbook modelBook = Workbook.getWorkbook(input);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Sheet sheet = modelBook.getSheet(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;处理之后的代码：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;   WorkbookSettings setting = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WorkbookSettings();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Locale locale = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Locale(&lt;span class=&quot;string&quot;&gt;&quot;zh&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;CN&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;setting.setLocale(locale);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;setting.setEncoding(&lt;span class=&quot;string&quot;&gt;&quot;ISO-8859-1&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Workbook modelBook = Workbook.getWorkbook(input,setting);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注：处理之后的代码片段中前4行代码段，用来解决乱码问题！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用JXL读取Excel中数据时，如果Excel中的单元格中有M1.5×6这样的值时，读取数据时，不能识别×，或者为乱码（？）。&lt;br&gt; 未处理之前代码：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
      <category term="java" scheme="http://www.soujava.com/categories/java/"/>
    
    
      <category term="jxl" scheme="http://www.soujava.com/tags/jxl/"/>
    
  </entry>
  
  <entry>
    <title>Linux查看端口占用</title>
    <link href="http://www.soujava.com/Linux%E6%9F%A5%E7%9C%8B%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/"/>
    <id>http://www.soujava.com/Linux查看端口占用/</id>
    <published>2016-08-17T03:30:49.000Z</published>
    <updated>2016-08-17T03:35:13.806Z</updated>
    
    <content type="html">&lt;p&gt;在操作linux服务器的时候经常会碰到端口被占用的情况，那么如果更好的找到某个端口被什么占用呢。&lt;/p&gt;
&lt;p&gt;一、分布操作&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先使用下面命令，查看当前环境的所有进程&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;netstat  -apn&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后看某一个端口，后面对应的PID，然后通过kill  PID,把该端口停止&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;kill -9 pid号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、快捷操作&lt;/p&gt;
&lt;p&gt; 使用如下命令查看对应的端口是否被占用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;netstat  -apn | grep  protNO
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如：netstat -apn | grep 8080  查看8080端口是否被占用，如果没占用，则显示被占用的进程；如果未被占用，则什么也不会输出。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在操作linux服务器的时候经常会碰到端口被占用的情况，那么如果更好的找到某个端口被什么占用呢。&lt;/p&gt;
&lt;p&gt;一、分布操作&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先使用下面命令，查看当前环境的所有进程&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;netstat  -apn&lt;/p&gt;

    
    </summary>
    
      <category term="linux" scheme="http://www.soujava.com/categories/linux/"/>
    
    
      <category term="网卡" scheme="http://www.soujava.com/tags/%E7%BD%91%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat实时查看日志信息</title>
    <link href="http://www.soujava.com/Tomcat%E5%AE%9E%E6%97%B6%E6%9F%A5%E7%9C%8B%E6%97%A5%E5%BF%97%E4%BF%A1%E6%81%AF/"/>
    <id>http://www.soujava.com/Tomcat实时查看日志信息/</id>
    <published>2016-08-17T03:27:50.000Z</published>
    <updated>2016-08-17T03:30:00.628Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先切换到tomcat的安装目录logs/文件夹下面（tomcat/logs/）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd  tomcat/logs/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行如下命令就可以实时查看tomcat的运行日志信息了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tail -f catalina.out&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;先切换到tomcat的安装目录logs/文件夹下面（tomcat/logs/）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd  tomcat/logs/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行如下命令就可以实时查看tomcat的
    
    </summary>
    
      <category term="Tomcat" scheme="http://www.soujava.com/categories/Tomcat/"/>
    
    
      <category term="Tomcat日志" scheme="http://www.soujava.com/tags/Tomcat%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>Linux双网卡配置(内外网同时访问)</title>
    <link href="http://www.soujava.com/Linux%E5%8F%8C%E7%BD%91%E5%8D%A1%E9%85%8D%E7%BD%AE-%E5%86%85%E5%A4%96%E7%BD%91%E5%90%8C%E6%97%B6%E8%AE%BF%E9%97%AE/"/>
    <id>http://www.soujava.com/Linux双网卡配置-内外网同时访问/</id>
    <published>2016-08-17T02:28:50.000Z</published>
    <updated>2016-08-17T03:22:03.305Z</updated>
    
    <content type="html">&lt;p&gt;事情的经过是这样的。。。。。；我有一台linux服务器操作系统，只能内网访问，现在需要提供给公司其他地域的同事通过VPN可以访问操作，那么就需要为这个linux操作系统配置一个新配置一个网卡，你修改网卡配置文件之前需要确保你的linux操作系统已经有两块物理网卡了，也就是说当你进入linux操作系统后，运行ifconfig命令可以看到eth0和eth1两个网卡信息，这才代表你的物理环境没有问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere11.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、Ubuntu篇&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、进入/etc/network目录中，编辑interfaces文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/linuxInter0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2、配置eth1网卡的信息(ip地址，网关、子网掩码、DNS)信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/linuxInter1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;3、配置完相关信息后，需要编辑路由配置文件，配置域名服务器(这里配置完成后，永久生效)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;vim /etc/resolvconf/resolv.conf.d/base
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/linuxInter2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;4、配置完网卡信息后，我们还不能连通外网，因为我们系统的路由默认采用内网网关进行通信的，我们需要把外网的网关设置成默认路由。先运行route命令查看路由信息，可以看到default 为eth0；即默认为内网网关。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/linuxInter4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;5、把外网网关地址添加为默认路由，同时删除内网网关的路由&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;route add default  gw 192.168.1.1

&amp;gt;route del default  gw 192.168.0.253
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;6、路由配置完成后，运行route命令我们可以看到default变成了eth1&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/linuxInter3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;7、重启网络服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;/etc/init.d/networking restart
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;8、总结：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看物理环境十分正常，也就是通过ifconfig命令是否显示两块网卡设备&lt;/li&gt;
&lt;li&gt;配置eth1网卡配置文件&lt;/li&gt;
&lt;li&gt;添加外网dns地址&lt;/li&gt;
&lt;li&gt;设置外网网关为默认路由&lt;/li&gt;
&lt;li&gt;重启网络服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：我之前一直在/etc/resolv.conf中添加dns信息，后来才明白这个是临时文件，当在/etc/resolvconf/resolv.conf.d/base文件中配置完成后，/etc/resolv.conf中信息会自动生成的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、Cent0S篇&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、同样检查一下系统物理环境是否正常，通过ifconfig命令查看是否存在除eth0网卡设备外，还有其他网卡eth*;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere11.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2、进入/etc/sysconfig/network-scripts/目录下面，我们可以看到有两个网卡设备的配置文件：ifcfg-eth0、ifcfg-eth1。&lt;/p&gt;
&lt;p&gt;3、将ifcfg-eth0配置文件复制一份并改名为ifcfg-eth1。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;cp ifcfg-eth0 ifcfg-eth1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;4、修改ifcfg-eth1配置文件,具体信息如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;DEVICE=eth1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;TYPE=Ethernet&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;NOBOOT=yes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;NM_CONTROLLED=yes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;BOOTPROTO=none&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IPADDR=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.*.*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PREFIX=&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;GATEWAY=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.*.*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;DEFROUTE=yes	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IPV4_FAILURE_FATAL=yes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IPV6INIT=no&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;NAME=&lt;span class=&quot;string&quot;&gt;&quot;System eth1&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;DNS1=*.*.*.*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;HWADDR=你的虚拟机的网卡设备的mac地址&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LAST_CONNECT=&lt;span class=&quot;number&quot;&gt;1465192940&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;USERCTL=no&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5、重启网络服务(下面两条命令都可以)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; service network restart
&amp;gt; /etc/init.d/network restart
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;事情的经过是这样的。。。。。；我有一台linux服务器操作系统，只能内网访问，现在需要提供给公司其他地域的同事通过VPN可以访问操作，那么就需要为这个linux操作系统配置一个新配置一个网卡，你修改网卡配置文件之前需要确保你的linux操作系统已经有两块物理网卡了，也就是说
    
    </summary>
    
      <category term="linux" scheme="http://www.soujava.com/categories/linux/"/>
    
    
      <category term="Linux" scheme="http://www.soujava.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>VMwarevSphere添加物理网卡后其中的虚拟机使用该网卡配置</title>
    <link href="http://www.soujava.com/VMwarevSphere%E6%B7%BB%E5%8A%A0%E7%89%A9%E7%90%86%E7%BD%91%E5%8D%A1%E5%90%8E%E5%85%B6%E4%B8%AD%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BD%BF%E7%94%A8%E8%AF%A5%E7%BD%91%E5%8D%A1%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.soujava.com/VMwarevSphere添加物理网卡后其中的虚拟机使用该网卡配置/</id>
    <published>2016-08-17T01:27:45.000Z</published>
    <updated>2016-08-17T03:18:59.997Z</updated>
    
    <content type="html">&lt;p&gt;一、有一台机架服务器，使用VMwarevSphere进行虚拟化，然后在其上安装N台虚拟机以供不同业务需要，之前该VMwarevSphere只有一个内网的物理网卡，也就是只能内网访问和使用；现在有个需求需要把该VMwarevSphere开放外网功能，并满足其他地域的用户通过公司VPN可以正常使用上面的虚拟机(其中的某一台)。所以现在需要三步操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;买一个物理网卡插到机架服务器的卡槽上面(哈哈，这一步不用说了，我去趟WC)&lt;/li&gt;
&lt;li&gt;VMwarevSphereClientk连VMwarevSphere服务器配置网卡&lt;/li&gt;
&lt;li&gt;进入到VMwarevSphere中的某一台虚拟机进行网卡配置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、VMwarevSphereClientk连VMwarevSphere服务器配置网卡&lt;/p&gt;
&lt;p&gt;1、 插入外网物理网卡之后，我们通过VMwarevSphereClientk连VMwarevSphere服务器后，在“配置”-“网络适配器”中就可以看到刚才新接入的网卡了(如果看不到，则说明你的网卡有问题啊，具体什么问题需要物理解决)，下面的图片中我们可以看到有两个可用的网卡(最下面两个vmnic0、vmnic1，其实vmnic1是我新接入的网卡)，其他的都不可用，仅仅代表支持多少个网卡&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere0.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2、 虽然我们已经接入了物理网卡，但是我们现在系统的网络环境还没有装载进来，我们需要把该网卡添加到网络环境中来；进入“配置”–“网络”，在右侧界面中右上角点击“添加网络”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;3、开始进入到添加网络的界面，其实只需要下一步下一步的进行就可以了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;4、 选择网卡的网络类型&lt;/p&gt;
&lt;p&gt;注：创建交换机那一项，选择网卡时不要被图片中我的选择内容干扰了，选择哪个网卡根据你的实际情况，参照第一幅图片中(你找到你新插入的物理网卡的代号vmnic0~vmnicN)；比如你新接入的网卡是那个你就选择哪个。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;5、设置网卡的链接方式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;6、完成配置&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;7、然后再次进入“配置”–“网络”界面中，我们可以看到我们新添加的网卡&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere00.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;8、 然后我们对这个网卡进行编辑操作(添加虚拟机端口)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere02.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;9、 这里跟上一个步骤差不多，只不过这里的连接类型需要选择“vmKernel”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere03.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere04.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;10、 配置我们的ip地址(一般是配置你的外网ip地址，因为你既然让他开放到外网，所以你肯定有可能需要在外网通过vmSphereClient进行远程管理吧，这里就是配置你的外网访问ip地址)，到这里我们的物理机和网卡的配置就算完成了，下面需要配置的就是我们需要提供给外网用户访问的虚拟机了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere05.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere06.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;11、 选择我们需要提供给外网用户访问的虚“虚拟机”，开始配置网络&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere6.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;12、 为虚拟机添加网卡(我们虚拟机要想链接外网，肯定要使用物理服务器的外网网卡，所以我们需要把物理服务器新接入的网卡添加到虚拟机上面)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;13、 选择网络类型(其实这里又是跟前面的网络配置差不多，多么熟悉的界面)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere8.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere9.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;14、 然后添加完成后，我们可以看到我们新加入的网络适配器2，这里需要记住右侧的MAC地址，后面的配置网卡配置文件时要用到&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere10.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;15、重启一下系统，然后我们进入到需要供外网访问的那台虚拟机中，输入ifconfig命令就可以看到我们为虚拟机添加的网卡了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere11.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;16、当然上一步中看到eth1这个新的网卡还不行，需要为这个网卡配置具体的ip，因为我们既然需要把这台虚拟机提供给外面用户访问，那么ip地址肯定不能老变化，所以我们需要为这个网卡eth1配置相关信息，具体怎么配置可以参考另一篇文章“&lt;a href=&quot;http://soujava.com/Linux%E5%8F%8C%E7%BD%91%E5%8D%A1%E9%85%8D%E7%BD%AE-%E5%86%85%E5%A4%96%E7%BD%91%E5%90%8C%E6%97%B6%E8%AE%BF%E9%97%AE/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux双网卡配置(内外网同时访问)&lt;/a&gt;”&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一、有一台机架服务器，使用VMwarevSphere进行虚拟化，然后在其上安装N台虚拟机以供不同业务需要，之前该VMwarevSphere只有一个内网的物理网卡，也就是只能内网访问和使用；现在有个需求需要把该VMwarevSphere开放外网功能，并满足其他地域的用户通过公
    
    </summary>
    
      <category term="vSphere" scheme="http://www.soujava.com/categories/vSphere/"/>
    
    
      <category term="vSphere添加物理网卡" scheme="http://www.soujava.com/tags/vSphere%E6%B7%BB%E5%8A%A0%E7%89%A9%E7%90%86%E7%BD%91%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>thymeleaf教程1-环境搭建</title>
    <link href="http://www.soujava.com/thymeleaf%E6%95%99%E7%A8%8B1-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.soujava.com/thymeleaf教程1-环境搭建/</id>
    <published>2016-08-08T07:16:41.000Z</published>
    <updated>2016-08-09T06:08:53.313Z</updated>
    
    <content type="html">&lt;p&gt;一、由于springboot这一强大的框架的发布，更由于其采用thymeleaf作为其官方的推荐模板引擎，所以决定学习一下thymeleaf这个模板引擎，当然是通过springboot才了解到的thymeleaf；所以试用也是基于springboot来进行；而springboot采用gradle工具依赖管理，所以要想使用thymeleaf，必须进行如下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在你的springboot项目工程中添加thymeleaf的依赖配置&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;compile(&lt;span class=&quot;string&quot;&gt;&quot;org.springframework.boot:spring-boot-starter-thymeleaf:1.3.3.RELEASE&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;编写一个测试页面(html),对thymeleaf进行使用&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     xmlns:layout=&quot;http://www.ultraq.net.nz/web/thymeleaf/layout&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;head&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/head&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	hello thymeleaf!&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;我们可以看到这就是一个普普通通的html模板页面，唯一不同的地方就是在&lt;html&gt;标签中添加了一些配置；这就是thymeleaf的标签；这里配置完以后，在下面我们就可以用&lt;strong&gt;&amp;lt;th:XX &lt;/strong&gt;这样的标签把数据渲染到html模板中了；&lt;/html&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于该html是模板页面，所以我们不能在浏览器中直接打开浏览thymeleaf渲染数据的效果，需要借助于类似tomcat的web服务器浏览才行！如果仍然直接在浏览器中浏览的话，那么我们看到的效果是&amp;lt;th:XX 标签被忽略的效果！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、暂且抛弃springboot，仅仅采用原生态的方式试用thymeleaf，即除了thymeleaf，其它都不包含&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;eclipse新建maven工程&lt;br&gt; &lt;img src=&quot;http://soujava.com/images/newmavenproject.png&quot; alt=&quot;&quot;&gt;&lt;br&gt; &lt;img src=&quot;http://soujava.com/images/newmaven1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt; &lt;img src=&quot;http://soujava.com/images/newmaven2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt; &lt;img src=&quot;http://soujava.com/images/newmaven3.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在pom.xml配置对Thymeleaf的依赖&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;groupId&amp;gt;com.maps&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;artifactId&amp;gt;theymeleaf&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;version&amp;gt;0.0.1-SNAPSHOT&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;name&amp;gt;theymeleaf Maven Webapp&amp;lt;/name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;url&amp;gt;http://maven.apache.org&amp;lt;/url&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;repositories&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;repository&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;id&amp;gt;sonatype-nexus-snapshots&amp;lt;/id&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;name&amp;gt;Sonatype Nexus Snapshots&amp;lt;/name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;url&amp;gt;https://oss.sonatype.org/content/repositories/snapshots&amp;lt;/url&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;snapshots&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/snapshots&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/repository&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/repositories&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;dependencies&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;version&amp;gt;3.8.1&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;groupId&amp;gt;org.thymeleaf&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;artifactId&amp;gt;thymeleaf&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;version&amp;gt;3.0.1.RELEASE&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;artifactId&amp;gt;javax.servlet-api&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;version&amp;gt;3.1.0&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;artifactId&amp;gt;slf4j-api&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;version&amp;gt;1.6.1&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;artifactId&amp;gt;slf4j-log4j12&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;version&amp;gt;1.6.1&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;groupId&amp;gt;log4j&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;artifactId&amp;gt;log4j&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;version&amp;gt;1.2.15&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;exclusions&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;exclusion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;groupId&amp;gt;com.sun.jdmk&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;artifactId&amp;gt;jmxtools&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;/exclusion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;exclusion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;groupId&amp;gt;com.sun.jmx&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;artifactId&amp;gt;jmxri&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;/exclusion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;exclusion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;groupId&amp;gt;javax.jms&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;artifactId&amp;gt;jms&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;/exclusion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/exclusions&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;/dependencies&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;build&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;resources&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;resource&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;directory&amp;gt;src/main/resources&amp;lt;/directory&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/resource&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;resource&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;directory&amp;gt;src/main/java&amp;lt;/directory&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;includes&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;include&amp;gt;**/*.properties&amp;lt;/include&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;include&amp;gt;**/*.xml&amp;lt;/include&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;include&amp;gt;**/*.html&amp;lt;/include&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;/includes&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/resource&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/resources&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;plugins&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;plugin&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;version&amp;gt;3.2&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;configuration&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;source&amp;gt;1.5&amp;lt;/source&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;target&amp;gt;1.5&amp;lt;/target&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;/configuration&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/plugin&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;plugin&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;artifactId&amp;gt;maven-resources-plugin&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;version&amp;gt;2.7&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;configuration&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;encoding&amp;gt;ISO-8859-1&amp;lt;/encoding&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;/configuration&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/plugin&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;plugin&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;groupId&amp;gt;org.apache.tomcat.maven&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;artifactId&amp;gt;tomcat7-maven-plugin&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;version&amp;gt;2.2&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/plugin&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/plugins&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;/build&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/project&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;中断一下，先讲解一下该demo的执行流程&lt;br&gt; &lt;img src=&quot;http://soujava.com/images/thymeleafFollow.png&quot; alt=&quot;模板引擎执行流程&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MyApplication–应用装载器&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; application;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.HashMap;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Map;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.ITemplateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.TemplateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.templatemode.TemplateMode;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.templateresolver.ServletContextTemplateResolver;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; controller.HomeController;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; controller.Controller;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyApplication&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   	 	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TemplateEngine templateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   	 	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Map&amp;lt;String, Controller&amp;gt; controllersByURL;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyApplication&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ServletContext servletContext)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*1、实例化模板解析器，并配置相关选项*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        ServletContextTemplateResolver templateResolver = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServletContextTemplateResolver(servletContext);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*1.1、其实thymeleaf模板引擎的默认模式是HTML，在这里再次设置只是为了更好理解*/&lt;/span&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        templateResolver.setTemplateMode(TemplateMode.HTML);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*1.2、设置模板引擎的默认加载路径*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        templateResolver.setPrefix(&lt;span class=&quot;string&quot;&gt;&quot;/WEB-INF/templates/&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*1.3、设置模板引擎的文件后缀*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        templateResolver.setSuffix(&lt;span class=&quot;string&quot;&gt;&quot;.html&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*1.4、设置模板缓存时间为1小时，如果不设置，模板将一直在缓存中*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        templateResolver.setCacheTTLMs(Long.valueOf(&lt;span class=&quot;number&quot;&gt;3600000L&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*1.5、模板引擎的默认缓存是开启的，这里设置true是为了更好理解； 其实如果这里设置false的话，当你修改模板后，你就可以在浏览器中实时查看到修改后的模板内容*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        templateResolver.setCacheable(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*2、实例化模板引擎*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.templateEngine = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TemplateEngine();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*3、将模板解析器装载到模板引擎中*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.templateEngine.setTemplateResolver(templateResolver);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*4、针对不同的url实例化不同的业务控制器*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.controllersByURL = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;String, Controller&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.controllersByURL.put(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HomeController());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Controller &lt;span class=&quot;title&quot;&gt;resolveControllerForRequest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; HttpServletRequest request)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       	 	&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path = getRequestPath(request);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.controllersByURL.get(path);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ITemplateEngine &lt;span class=&quot;title&quot;&gt;getTemplateEngine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.templateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getRequestPath&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; HttpServletRequest request)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        String requestURI = request.getRequestURI();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String contextPath = request.getContextPath();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fragmentIndex = requestURI.indexOf(&lt;span class=&quot;string&quot;&gt;&#39;;&#39;&lt;/span&gt;); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fragmentIndex != -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	            requestURI = requestURI.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, fragmentIndex);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (requestURI.startsWith(contextPath)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; requestURI.substring(contextPath.length());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; requestURI;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Controller–控制器接口&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; controller;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletResponse;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.ITemplateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Controller&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           HttpServletRequest request, HttpServletResponse response,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           ServletContext servletContext, ITemplateEngine templateEngine)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HomeController–首页控制器业务类,实现controller接口&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; controller;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Calendar;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletResponse;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.ITemplateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.context.WebContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HomeController&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Controller&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HomeController&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; HttpServletRequest request, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; HttpServletResponse response,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ServletContext servletContext, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ITemplateEngine templateEngine)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       WebContext ctx = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebContext(request, response, servletContext, request.getLocale());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       ctx.setVariable(&lt;span class=&quot;string&quot;&gt;&quot;today&quot;&lt;/span&gt;, Calendar.getInstance());&lt;span class=&quot;comment&quot;&gt;//thymeleaf的上下文中设置变量数据&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       templateEngine.process(&lt;span class=&quot;string&quot;&gt;&quot;home&quot;&lt;/span&gt;, ctx, response.getWriter());&lt;span class=&quot;comment&quot;&gt;//模板引擎转向到对应的模板页面&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MyFilter–过滤器类&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; filter;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.Filter;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.FilterChain;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.FilterConfig;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletException;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletRequest;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletResponse;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletResponse;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.ITemplateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; application.MyApplication;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; controller.Controller;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; entity.User;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyFilter&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Filter&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ServletContext servletContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; MyApplication application;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyFilter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; FilterConfig filterConfig)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ServletException &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.servletContext = filterConfig.getServletContext();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.application = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyApplication(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.servletContext);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doFilter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ServletRequest request, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ServletResponse response,&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; FilterChain chain) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, ServletException &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!process((HttpServletRequest)request, (HttpServletResponse)response)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            	chain.doFilter(request, response);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(HttpServletRequest request, HttpServletResponse response)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ServletException &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            	&lt;span class=&quot;comment&quot;&gt;//针对资源请求url进行排除&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           	 &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (request.getRequestURI().startsWith(&lt;span class=&quot;string&quot;&gt;&quot;/css&quot;&lt;/span&gt;) ||&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    request.getRequestURI().startsWith(&lt;span class=&quot;string&quot;&gt;&quot;/images&quot;&lt;/span&gt;) ||&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    request.getRequestURI().startsWith(&lt;span class=&quot;string&quot;&gt;&quot;/favicon&quot;&lt;/span&gt;)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           	 &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             * 根据URL映射，获得处理该请求的控制器。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Controller controller = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.application.resolveControllerForRequest(request);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (controller == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             * 获取TemplateEngine(模板引擎)实例&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ITemplateEngine templateEngine = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.application.getTemplateEngine();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             * 写入响应头部信息&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            response.setContentType(&lt;span class=&quot;string&quot;&gt;&quot;text/html;charset=UTF-8&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            response.setHeader(&lt;span class=&quot;string&quot;&gt;&quot;Pragma&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;no-cache&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            response.setHeader(&lt;span class=&quot;string&quot;&gt;&quot;Cache-Control&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;no-cache&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            response.setDateHeader(&lt;span class=&quot;string&quot;&gt;&quot;Expires&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             * 执行控制器，并转向到对应的模板视图&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            controller.process(request, response, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.servletContext, templateEngine);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       	 &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; IOException ignored) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServletException(e);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;web.xml配置&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;	&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;lt;web-app id=&quot;gtvg&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         version=&quot;3.1&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;display-name&amp;gt;thymeleafexamples-gtvg&amp;lt;/display-name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;session-config&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;session-timeout&amp;gt;60&amp;lt;/session-timeout&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/session-config&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;filter-name&amp;gt;gtvgfilter&amp;lt;/filter-name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;filter-class&amp;gt;filter.MyFilter&amp;lt;/filter-class&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;filter-mapping&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;filter-name&amp;gt;gtvgfilter&amp;lt;/filter-name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/filter-mapping&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/web-app&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在webapp/WEB-INF目录下面新建templates(模板目录)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;因为在MyApplication应用装载器中，我们在初始化模板引擎解析器时，设置了模板的目录选项。&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;/*1.2、设置模板引擎的默认加载路径*/
 templateResolver.setPrefix(&amp;quot;/WEB-INF/templates/&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;在templates目录下面新建home.html模板文件&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;head&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;title&amp;gt;Good Thymes Virtual Grocery&amp;lt;/title&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;/head&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;body&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;p&amp;gt;hello &amp;lt;span th:text=&quot;&#39;Thymeleaf&#39;&quot;&amp;gt;word!&amp;lt;/span&amp;gt;.&amp;lt;/p&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;/body&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;在该模板页面中，我们可以看到使用了 th:text标签显示内容到p标签中&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;运行pom.xml编译构建完成后，启动tomcat服务器预览测试&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/thyemleafshow.png&quot; alt=&quot;显示页面&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;根据浏览效果我们可以看到th:text中的内容替换了p标签原有的内容word!&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;该demo已经上传至github上面，&lt;a href=&quot;https://github.com/mapingsheng/theymeleaf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/mapingsheng/theymeleaf&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一、由于springboot这一强大的框架的发布，更由于其采用thymeleaf作为其官方的推荐模板引擎，所以决定学习一下thymeleaf这个模板引擎，当然是通过springboot才了解到的thymeleaf；所以试用也是基于springboot来进行；而springb
    
    </summary>
    
      <category term="thymeleaf" scheme="http://www.soujava.com/categories/thymeleaf/"/>
    
    
      <category term="thymeleaf" scheme="http://www.soujava.com/tags/thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>如何查看当前的linux系统是哪个发行商</title>
    <link href="http://www.soujava.com/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E7%9A%84linux%E7%B3%BB%E7%BB%9F%E6%98%AF%E5%93%AA%E4%B8%AA%E5%8F%91%E8%A1%8C%E5%95%86/"/>
    <id>http://www.soujava.com/如何查看当前的linux系统是哪个发行商/</id>
    <published>2016-08-03T08:06:33.000Z</published>
    <updated>2016-08-03T08:35:10.953Z</updated>
    
    <content type="html">&lt;p&gt;我们刚开始进入一个linux操作系统，可能只知道它是一个操作系统，但是不太清楚到底是那个发行商，比如ubuntu、Centos、Debian等等；那么当然老鸟通过查看某些目录的配置文件一眼就可以看到是什么发行商；对于新鸟来说有以下几个技巧可以查看：&lt;/p&gt;
&lt;p&gt;一、 通用方法-适用于当前市面上绝大多数linux&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;lsb_release -a&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[maps&lt;span class=&quot;meta&quot;&gt;@iZ&lt;/span&gt;25017n0ruZ conf]$ lsb_release -a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LSB Version:	:core-&lt;span class=&quot;number&quot;&gt;4.1&lt;/span&gt;-amd64:core-&lt;span class=&quot;number&quot;&gt;4.1&lt;/span&gt;-noarch&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Distributor ID:	CentOS&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Description:	CentOS Linux release &lt;span class=&quot;number&quot;&gt;7.0&lt;/span&gt;.1406 (Core) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Release:	&lt;span class=&quot;number&quot;&gt;7.0&lt;/span&gt;.1406&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Codename:	Core&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输入以上命令后可以看到该linux操作系统是CentOs,版本是7.0.1406&lt;/p&gt;
&lt;p&gt;二、 非通用-技巧&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先通过cat /proc/version命令查看当前linux系统内核信息&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[maps@iZ25017n0ruZ etc]$ cat /proc/version &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Linux version 3.10.0-123.9.3.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.2 20140120 (Red Hat 4.8.2-16) (GCC) ) #1 SMP Thu Nov 6 15:06:03 UTC 2014&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过上面命令输出信息我们可以看到系统为Red Hat 4.8.2系列&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[maps@iZ25017n0ruZ etc]$ cat /proc/version &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Linux version 3.13.0-32-generic (buildd@kissel) (gcc version 4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过上面输出信息我们可以看到系统为Ubuntu系列&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后切换到/etc/目录下面，看看是否os.release文件，然后通过”cat os.release”命令查看该文件内容信息&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[**cat /etc/redhat-release**&lt;span class=&quot;meta&quot;&gt;@iZ&lt;/span&gt;25017n0ruZ etc]$ cat ./os-release &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;NAME=&lt;span class=&quot;string&quot;&gt;&quot;CentOS Linux&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;VERSION=&lt;span class=&quot;string&quot;&gt;&quot;7 (Core)&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ID=&lt;span class=&quot;string&quot;&gt;&quot;centos&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ID_LIKE=&lt;span class=&quot;string&quot;&gt;&quot;rhel fedora&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;VERSION_ID=&lt;span class=&quot;string&quot;&gt;&quot;7&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PRETTY_NAME=&lt;span class=&quot;string&quot;&gt;&quot;CentOS Linux 7 (Core)&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ANSI_COLOR=&lt;span class=&quot;string&quot;&gt;&quot;0;31&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CPE_NAME=&lt;span class=&quot;string&quot;&gt;&quot;cpe:/o:centos:centos:7&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;HOME_URL=&lt;span class=&quot;string&quot;&gt;&quot;https://www.centos.org/&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;BUG_REPORT_URL=&lt;span class=&quot;string&quot;&gt;&quot;https://bugs.centos.org/&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过上面的输出信息我们可以确定该系统为CentOs 7&lt;/p&gt;
&lt;p&gt;注：如果是redhat系列的linux系统，在/etc目录下面会有redhat-release文件，我们通过&lt;strong&gt;cat /etc/redhat-release&lt;/strong&gt;命令也可以查看系统发行商信息&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[maps&lt;span class=&quot;meta&quot;&gt;@iZ&lt;/span&gt;25017n0ruZ conf]$ cat /etc/redhat-release&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CentOS Linux release &lt;span class=&quot;number&quot;&gt;7.0&lt;/span&gt;.1406 (Core)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我们刚开始进入一个linux操作系统，可能只知道它是一个操作系统，但是不太清楚到底是那个发行商，比如ubuntu、Centos、Debian等等；那么当然老鸟通过查看某些目录的配置文件一眼就可以看到是什么发行商；对于新鸟来说有以下几个技巧可以查看：&lt;/p&gt;
&lt;p&gt;一、 通用
    
    </summary>
    
      <category term="linux" scheme="http://www.soujava.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://www.soujava.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis动态传入tableName--非预编译(STATEMENT)</title>
    <link href="http://www.soujava.com/Mybatis%E5%8A%A8%E6%80%81%E4%BC%A0%E5%85%A5tableName-%E9%9D%9E%E9%A2%84%E7%BC%96%E8%AF%91-STATEMENT/"/>
    <id>http://www.soujava.com/Mybatis动态传入tableName-非预编译-STATEMENT/</id>
    <published>2016-07-28T11:12:02.000Z</published>
    <updated>2016-07-28T12:29:32.836Z</updated>
    
    <content type="html">&lt;p&gt;在使用Mybatis过程中，你可以体会到它的强大与灵活之处，由衷的为Mybatis之父点上999个赞！在使用过程中经常会遇到这样一种情况，我查询数据的时候，表名称是动态的从程序中传入的，比如我们通过mybatis的xml文件写sql查询时都是下面的样子：&lt;br&gt;&lt;strong&gt;1、正常的查询&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;select id=&quot;activityEnrollModelTableName&quot; parameterType=&quot;java.util.HashMap&quot; resultType=&quot;java.util.HashMap&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SELECT * FROM user WHERE userid = #&amp;#123;userid&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/select&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的查询语句用mybatis执行时,其实是自动的按照JDBC的预编译语句方式执行的，等同于下面一段JDBC代码的执行过程&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;com.mysql.jdbc.Driver&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Connection conn = DriverManage.getConnection(&lt;span class=&quot;string&quot;&gt;&quot;jdbc:mysql://localhost:3306/dbname&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;root&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;112233&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PreparedStatement preState = conn.prepareStatement(&lt;span class=&quot;string&quot;&gt;&quot;SELECT * FROM user WHERE userid = ?&quot;&lt;/span&gt;); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;preState.setString(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;96&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ResultSet result = preState.executeQuery();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(result.next())&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	result.getString(columnname);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	..........&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;到这里我们不禁疑惑，难道mybatis默认都是按照预编译语句的方式执行sql的吗？其实就是这样。通过查看mybatis官网文档可以看到有这么一个参数，statementType=[STATEMENT | PREPARED | CALLABLE ]；有三个可选值，mybatis默认值是PREPARED；&lt;br&gt;这个参数是什么作用呢：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设定mybatis执行sql的模式&lt;/li&gt;
&lt;li&gt;STATEMENT设定为非预编译语句模式&lt;/li&gt;
&lt;li&gt;PREPARED设定为预编译语句模式–mybatis默认&lt;/li&gt;
&lt;li&gt;CALLABLE设定为兼容模式，或者自适应模式，比如设置该值后，mybatis处理sql时会自动的处理根据#、$去判断处理，后面说一下#和$的区别。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;综上所述,mybatis默认按照预编译语句方式执行sql语句&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、动态传入表名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实也经常会遇到动态的传入tableName的情况，也就是说上面的sql语句中的”user”是动态传入的，动态传入表名是mybatis中的一种特殊情况，&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;select id=&quot;activityEnrollModelTableName&quot; parameterType=&quot;java.util.HashMap&quot; resultType=&quot;java.util.HashMap&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SELECT * FROM #&amp;#123;user&amp;#125; WHERE userid = #&amp;#123;userid&amp;#125; //错误的写法&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/select&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;针对上面的语句，如果让mybatis仍然按照预编译语句方式执行时，等同于如下面的JDBC代码：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;com.mysql.jdbc.Driver&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Connection conn = DriverManage.getConnection(&lt;span class=&quot;string&quot;&gt;&quot;jdbc:mysql://localhost:3306/dbname&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;root&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;112233&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PreparedStatement preState = conn.prepareStatement(&lt;span class=&quot;string&quot;&gt;&quot;SELECT * FROM ? WHERE userid = ?&quot;&lt;/span&gt;); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;preState.setString(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;USER&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;preState.setString(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;96&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ResultSet result = preState.executeQuery();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(result.next())&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	result.getString(columnname);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	..........&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们把该段JDBC代码通过java代码执行后，发现会报异常：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;java.sql.SQLException: ORA-&lt;span class=&quot;number&quot;&gt;00903&lt;/span&gt;: 表名无效&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所以可以说明预编译语句不能用于列名(查询的列名也不能用预编译语句)、表名；只能作用与where条件参数属性！既然JDBC就不能将预编译语句方式作用与表名上面，那么mybatis就同样也行不通(因为mybatis默认是预编译语句模式)。不过mybatis也早已考虑到了这种情况，所以为我们做了处理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;select标签语句中添加statementType=”STATEMENT”的属性配置&lt;/li&gt;
&lt;li&gt;标签内的sql语句中将所有的${}更换成为#{}，即将$还成#;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;select id=&quot;activityEnrollModelTableName&quot; statementType=&quot;STATEMENT&quot; parameterType=&quot;java.util.HashMap&quot; resultType=&quot;java.util.HashMap&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SELECT * FROM $&amp;#123;user&amp;#125; WHERE userid = $&amp;#123;userid&amp;#125; //正确的写法&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/select&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面的语句标签中通过添加statementType=”STATEMENT”配置后，mybatis就不再使用预编译语句方式执行sql语句了，也就是通过直接执行sql语句操作；那么既然添加了statementType=”STATEMENT”非预编译配置后，为什么还需要把#换成$呢？其实是这样：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;“#” 是预编译语句模式下面的默认匹配符，也就是说mybatis遇到#{}时，将#{userid}替换成占位符?;被解析为一个JDBC预编译语句，然后再将#{userid}本身的值set进来。&lt;/li&gt;
&lt;li&gt;“$” 是非预编译语句下面的匹配符，非预编译语句说白了就是你传入什么sql语句，就执行什么sql语句，mybatis不做任何处理操作，但是这里mybatis会将${}对应的值，当做一个字符串处理，也就是说你程序接口方法中传递过来参数值是什么，对应的sql填充就是什么！&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在使用Mybatis过程中，你可以体会到它的强大与灵活之处，由衷的为Mybatis之父点上999个赞！在使用过程中经常会遇到这样一种情况，我查询数据的时候，表名称是动态的从程序中传入的，比如我们通过mybatis的xml文件写sql查询时都是下面的样子：&lt;br&gt;&lt;stron
    
    </summary>
    
      <category term="Mybatis" scheme="http://www.soujava.com/categories/Mybatis/"/>
    
    
      <category term="动态传入tableName" scheme="http://www.soujava.com/tags/%E5%8A%A8%E6%80%81%E4%BC%A0%E5%85%A5tableName/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统添加配置随开机启动的服务-rc.local配置</title>
    <link href="http://www.soujava.com/Linux%E7%B3%BB%E7%BB%9F%E6%B7%BB%E5%8A%A0%E9%85%8D%E7%BD%AE%E9%9A%8F%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E7%9A%84%E6%9C%8D%E5%8A%A1/"/>
    <id>http://www.soujava.com/Linux系统添加配置随开机启动的服务/</id>
    <published>2016-07-25T09:46:24.000Z</published>
    <updated>2016-08-17T03:22:14.605Z</updated>
    
    <content type="html">&lt;p&gt;在linux服务器操作系统中，经常会安装一些服务器端的软件如：tomcat、redis、MQ、Nginx等等常用的服务器组件；那么有时候服务器重启后需要用一个一个的启动命令把不同的软件启动起来；主要有以下几种场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;以root身份才能启动的服务&lt;/li&gt;
&lt;li&gt;以非root身份启动的服务(一般情况下都是以非root身份启动和管理服务)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;一、下面以把tomcat服务器配置成随开机自启动的配置为例说明一下&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;tomcat的安装路径：/usr/local/server/apache-tomcat-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么我们知道了tomcat的安装路径后，就可以通过以下命令启动tomcat服务了&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/usr/local/server/apache-tomcat-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;/bin/start.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果我们想让linux每次开机时自动启动tomcat服务，那么我们需要如下配置：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 /etc/rc.d/rc.local文件，在该配置文件中添加tomcat的启动命令&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;touch /var/lock/subsys/local&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/usr/local/server/apache-tomcat-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;/bin/start.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;二、下面以把redis服务配置成随开机自启动的配置为例说明一下（以redis用户启动）&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;redis的安装路径：/usr/local/cache/redis-&lt;span class=&quot;number&quot;&gt;2.8&lt;/span&gt;.19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果我们通过输入命令启动redis的方式是：(假设redis服务启动时必须用redis用户)&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/usr/local/cache/redis-&lt;span class=&quot;number&quot;&gt;2.8&lt;/span&gt;.19/src/redis-server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果我们想让linux每次开机时自动启动redis服务，那么我们需要如下配置：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 /etc/rc.d/rc.local文件，在该配置文件中添加tomcat的启动命令&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;touch /var/lock/subsys/local&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;su redis -c &lt;span class=&quot;string&quot;&gt;&quot;/usr/local/cache/redis-2.8.19/src/redis-server&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;三、总结&lt;/strong&gt;&lt;br&gt;我们主要通过在rc.local文件中添加我们服务的启动脚本的方式来配置随开机自启动服务；当然对于linux操作系统来讲，并不是仅仅就这一种方式配置随机启动操作，其他方式后续再说。那么rc.local到底是什么文件呢？&lt;/p&gt;
&lt;p&gt;rc.local其实是一个脚本文件，该脚本是在系统初始化级别脚本运行之后再执行的，因此可以在里面添加你想在系统启动之后执行的任何操作，比如启动第三方的服务，比如挂载mount操作等等。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在linux服务器操作系统中，经常会安装一些服务器端的软件如：tomcat、redis、MQ、Nginx等等常用的服务器组件；那么有时候服务器重启后需要用一个一个的启动命令把不同的软件启动起来；主要有以下几种场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;以root身份才能启动的服务&lt;/
    
    </summary>
    
      <category term="linux" scheme="http://www.soujava.com/categories/linux/"/>
    
    
      <category term="服务开机启动" scheme="http://www.soujava.com/tags/%E6%9C%8D%E5%8A%A1%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>Linux开机启动后经常需要配置网卡</title>
    <link href="http://www.soujava.com/Linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E5%90%8E%E7%BB%8F%E5%B8%B8%E9%9C%80%E8%A6%81%E9%85%8D%E7%BD%AE%E7%BD%91%E5%8D%A1/"/>
    <id>http://www.soujava.com/Linux开机启动后经常需要配置网卡/</id>
    <published>2016-07-25T09:27:42.000Z</published>
    <updated>2016-08-17T03:35:36.430Z</updated>
    
    <content type="html">&lt;p&gt;在虚拟机中安装的CentOS6操作系统，每次开机启动后，网卡默认都是关闭的；所以系统对外网络是处于中断的状态的，所以也就不能通过Xshell工具远程连接操作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/wangka.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后针对上面的情况，需要手动操作一下，把eth0网卡开启使用才行；感觉很繁琐！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/wankapeizhi.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;解决方法：&lt;br&gt;使用如下命令编辑网卡信息：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;vim /etc/sysconfig/network-scripts/ifcfg-eth0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;网卡信息的内容大致如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;DEVICE=&amp;quot;eth0&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;TYPE=ethernet&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;UUID=1221231K-4DFSD-8SDFA&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ONBOOT=&amp;quot;yes&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IPADDR=192.168.1.152&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;NETMASK=255.255.255.0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;GATEWAY=192.168.1.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;BOOTPROTO=static&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在网卡信息中找到”NOBOOT=no”配置选项，改成”NOBOOT=yes”&lt;/p&gt;
&lt;p&gt;再重启电脑后就不需要再次手动配置激活网卡了！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在虚拟机中安装的CentOS6操作系统，每次开机启动后，网卡默认都是关闭的；所以系统对外网络是处于中断的状态的，所以也就不能通过Xshell工具远程连接操作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/wangka.jpg&quot; al
    
    </summary>
    
      <category term="linux" scheme="http://www.soujava.com/categories/linux/"/>
    
    
      <category term="网卡" scheme="http://www.soujava.com/tags/%E7%BD%91%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>通过Nginx反向代理解决跨域问题</title>
    <link href="http://www.soujava.com/%E9%80%9A%E8%BF%87%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
    <id>http://www.soujava.com/通过反向代理解决跨域问题/</id>
    <published>2016-07-19T09:26:32.000Z</published>
    <updated>2016-07-25T09:45:28.236Z</updated>
    
    <content type="html">&lt;p&gt; 有以下需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有两个独立运行的系统，用户系统(user)、发布系统(publish)&lt;/li&gt;
&lt;li&gt;publish系统中的添加内容功能模块需要选择对应的用户，那么user系统已经有了一个这样的页面，而publish系统想直接加载过来使用，并且勾选页面中的数据后可以获取已勾选的数据；&lt;/li&gt;
&lt;li&gt;因为两个系统部署在不同的服务器中运行，所以存在跨域问题&lt;/li&gt;
&lt;li&gt;解决方案主要通过反向代理的方式解决，这种方式可以避免两个系统更改大量的代码&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/kuayu.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：以上方式可以解决publish系统远程调用user系统提供的数据页面(静态页面)的跨域问题，但是如果user系统提供的页面中有js异步事件，则仍然会出现跨域问题(比如在user系统提供的选择用户的界面中，当点击左侧角色分类时，异步加载右侧的用户列表数据)；所以需要user系统提供的视图页面对应的业务处理方法中做一些微小的改动即可，在响应对象中添加如下设置：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;response.setHeader(&lt;span class=&quot;string&quot;&gt;&quot;Access-Control-Allow-Origin&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt; 有以下需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有两个独立运行的系统，用户系统(user)、发布系统(publish)&lt;/li&gt;
&lt;li&gt;publish系统中的添加内容功能模块需要选择对应的用户，那么user系统已经有了一个这样的页面，而publish系统想直接加载过来使用，并且
    
    </summary>
    
      <category term="Nginx" scheme="http://www.soujava.com/categories/Nginx/"/>
    
    
      <category term="跨域" scheme="http://www.soujava.com/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>java通过Stream对list集合分组</title>
    <link href="http://www.soujava.com/java%E9%80%9A%E8%BF%87Stream%E5%AF%B9list%E9%9B%86%E5%90%88%E5%88%86%E7%BB%84/"/>
    <id>http://www.soujava.com/java通过Stream对list集合分组/</id>
    <published>2016-07-15T06:00:11.000Z</published>
    <updated>2016-07-15T07:22:09.367Z</updated>
    
    <content type="html">&lt;p&gt;现在有一个List集合，想对该集合中的数据分组处理，想到java8中的stream，就搞来试试，非常给力！例子如下&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.maps;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Integer id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String type;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String name; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Integer id,String type,String name)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.id = id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.type = type;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Integer id)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.id = id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Integer &lt;span class=&quot;title&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setType&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String type)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.type = type;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getType&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; type;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String name)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.maps;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Map;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.stream.Collectors;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainUser&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		List&amp;lt;User&amp;gt; list = getUserList();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		Map&amp;lt;String,List&amp;lt;User&amp;gt;&amp;gt; userGroupMap = list.stream().collect(Collectors.groupingBy(User::getType));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; List&amp;lt;User&amp;gt; &lt;span class=&quot;title&quot;&gt;getUserList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		User user1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;张三&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;小学&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		User user2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;李四&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;小学&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		User user3 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;王五&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;初中&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		User user4 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;马六&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;高中&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		List&amp;lt;User&amp;gt; list = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;User&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		list.add(user1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		list.add(user2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		list.add(user3);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		list.add(user4);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; list;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行上面例子得到下面的结果&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;高中=[com.maps.User@&lt;span class=&quot;number&quot;&gt;448139f&lt;/span&gt;0], 初中=[com.maps.User@&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;cca494b], 小学=[com.maps.User@&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;ba4f24f, com.maps.User@&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;b9a45b3]&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;是不是感觉不用for循环挺爽！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;现在有一个List集合，想对该集合中的数据分组处理，想到java8中的stream，就搞来试试，非常给力！例子如下&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div clas
    
    </summary>
    
      <category term="java" scheme="http://www.soujava.com/categories/java/"/>
    
    
      <category term="java8 Stream" scheme="http://www.soujava.com/tags/java8-Stream/"/>
    
  </entry>
  
  <entry>
    <title>java接收oracle中clob类型字段值</title>
    <link href="http://www.soujava.com/java%E6%8E%A5%E6%94%B6oracle%E4%B8%ADclob%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E5%80%BC/"/>
    <id>http://www.soujava.com/java接收oracle中clob类型字段值/</id>
    <published>2016-07-06T08:16:33.000Z</published>
    <updated>2016-07-06T08:40:54.414Z</updated>
    
    <content type="html">&lt;p&gt;oracle数据库中有一种大文本字段类型：clob;那么当我们的java程序从数据库中查询出来的数据列表用java程序如何接收处理呢？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Clob columnContentClob = result.getClob(1); //先用大文本类型接收,getClob方法可以传入列名(columnName)重载使用
Reader is = columnContentClob.getCharacterStream();//用reader接收
BufferedReader bf = new BufferedReader(is);//实例化一个缓冲流
String columnContent = bf.readLine();//读取大文本的内容
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;实例&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;String driver = &amp;quot;oracle.jdbc.OracleDriver&amp;quot;;
String url = &amp;quot;jdbc:oracle:thin:@127.0.0.1:1521/databaseName&amp;quot;;
String username = &amp;quot;username&amp;quot;;
String password = &amp;quot;password&amp;quot;;
Class.forName(driver);
Connection conn = DriverManager.getConnection(url, username, password);

 ResultSet rs = null;
PreparedStatement pstmt = null;
String query = &amp;quot;SELECT description FROM mytable WHERE id = ?&amp;quot;;
try {
  conn = getConnection();
  pstmt = conn.prepareStatement(query);
  pstmt.setInt(1, id);
  rs = pstmt.executeQuery();
  rs.next();
  Clob clob = rs.getClob(1);//rs.getClob(&amp;quot;description&amp;quot;);

} finally {
  rs.close();
  pstmt.close();
  conn.close();
}
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;oracle数据库中有一种大文本字段类型：clob;那么当我们的java程序从数据库中查询出来的数据列表用java程序如何接收处理呢？&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Clob columnContentClob = result.getClob(1); //先用大文本类型接
    
    </summary>
    
      <category term="java" scheme="http://www.soujava.com/categories/java/"/>
    
    
      <category term="java接收clob字段" scheme="http://www.soujava.com/tags/java%E6%8E%A5%E6%94%B6clob%E5%AD%97%E6%AE%B5/"/>
    
  </entry>
  
  <entry>
    <title>oracle11G导出数据时空表无法导出</title>
    <link href="http://www.soujava.com/oracle11G%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE%E6%97%B6%E7%A9%BA%E8%A1%A8%E6%97%A0%E6%B3%95%E5%AF%BC%E5%87%BA/"/>
    <id>http://www.soujava.com/oracle11G导出数据时空表无法导出/</id>
    <published>2016-07-06T00:49:02.000Z</published>
    <updated>2016-07-06T01:04:23.228Z</updated>
    
    <content type="html">&lt;p&gt;  使用oracle数据库导出命令exp导出数据库的时候，数据库中的空表无法导出，因为oracle11g 建表时，默认不分配segment,以节省磁盘空间，当表插入第一条数据时，再分配segment。当然至于想不想在oracle创建表的时候就自动分配segment,是跟oracle的一个配置参数有关的，也就是&lt;br&gt;  “deferred_segment_creation”；默认该参数为true，说明不自动分配sgement，如果设置该参数为false时，则会从此刻以后每次创建表就自动分配segment。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：segment就是oracle中段的概念，默认一个普通表会对应一个segment；这里的段就是物理存储的对象，而表(table)就是逻辑存储的对象。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;解决方法：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1）打开命令行工具执行命令：alter system set deferred_segment_creation=false;
2）执行之后后期创建的空表就可以正常导出了，但是在命令执行之前的空表还是无法进行导出
3）先查询一下哪些表是空的：select table_name from user_tables where NUM_ROWS=0;
4）下面我们通过select 来生成修改语句：
    select &amp;apos;alter table &amp;apos;||table_name||&amp;apos; allocate extent;&amp;apos; from user_tables where num_rows=0
     后复制生成的修改语句执行，问题解决！
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;总结：解决方法共3个途径：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1：向空白插入一条数据，再删除掉，就分配空间了（空表比较少）。
2：修改系统参数
      alter system set deferred_segment_creation=false;
     （对以后新增的表系统会分配 segment），重启数据库。
3：批量对现有的空表分配空间
     select &amp;apos;alter table &amp;apos; || table_name ||  &amp;apos; allocate extent;&amp;apos; as sql from all_tables where num_rows = 0 and OWNER=username ;
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;  使用oracle数据库导出命令exp导出数据库的时候，数据库中的空表无法导出，因为oracle11g 建表时，默认不分配segment,以节省磁盘空间，当表插入第一条数据时，再分配segment。当然至于想不想在oracle创建表的时候就自动分配segment,是跟or
    
    </summary>
    
      <category term="oracle" scheme="http://www.soujava.com/categories/oracle/"/>
    
    
      <category term="oracle导出空表" scheme="http://www.soujava.com/tags/oracle%E5%AF%BC%E5%87%BA%E7%A9%BA%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>界面框架</title>
    <link href="http://www.soujava.com/2016-06-30-%E7%95%8C%E9%9D%A2%E6%A1%86%E6%9E%B6/"/>
    <id>http://www.soujava.com/2016-06-30-界面框架/</id>
    <published>2016-06-30T08:39:11.000Z</published>
    <updated>2016-07-01T08:20:02.726Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;1、布局框架&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 访问地址：&lt;a href=&quot;http://layout.jquery-dev.com/index.cfm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://layout.jquery-dev.com/index.cfm&lt;/a&gt;&lt;br&gt; demo：&lt;a href=&quot;http://layout.jquery-dev.com/demos.cfm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://layout.jquery-dev.com/demos.cfm&lt;/a&gt;&lt;br&gt; 可以满足多种复杂或者简单的布局，支持拖拉操作：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/bujv.jpg&quot; alt=&quot;Alt text&quot; title=&quot;git push&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、表格框架&lt;/strong&gt;&lt;br&gt;2.1、SlickGrid（&lt;a href=&quot;https://github.com/Celebio/SlickGrid）&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Celebio/SlickGrid）&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1)、支持表格的排序、列宽度的拖拽调整、表格中列的可编辑、表格中可编辑单元格中的各种控件(时间选择、下拉框、滑动条、复选框等等)、表格中添                                    加树形菜单、表格列宽度随着窗口大小自动调整；
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/biaoge1.jpg&quot; alt=&quot;Alt text&quot; title=&quot;表格&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/biaoge2.jpg&quot; alt=&quot;Alt text&quot; title=&quot;表格&quot;&gt;&lt;/p&gt;
&lt;p&gt;   2)、可以在表格中直接框选复制-粘贴、对单元格中的值动态筛选、表格中的一些值的汇总计算以及展示、框选复制粘贴&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/biaoge3.jpg&quot; alt=&quot;Alt text&quot; title=&quot;表格&quot;&gt;&lt;/p&gt;
&lt;p&gt;   3)、表格数据的渲染速度也非常不错，50万条静态数据一次加载渲染到表格中1-3秒时间&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/biaoge4.jpg&quot; alt=&quot;Alt text&quot; title=&quot;表格&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.2、 paramquery（&lt;a href=&quot;http://paramquery.com/grid）&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://paramquery.com/grid）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  1)、表格拖拉控制宽度、排序、可编辑&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/biaoge5.jpg&quot; alt=&quot;Alt text&quot; title=&quot;表格&quot;&gt;&lt;/p&gt;
&lt;p&gt;  2)、可以对添加表格中的数据、以及对表格中的某几列数据添加横向滚动条&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/biaoge6.jpg&quot; alt=&quot;Alt text&quot; title=&quot;表格&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;3)、可以对表格头部进行复杂的嵌套汇总显示：
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/biaoge9.jpg&quot; alt=&quot;Alt text&quot; title=&quot;表格&quot;&gt;&lt;/p&gt;
&lt;p&gt;2.3、 jqwidgets（&lt;a href=&quot;http://www.jqwidgets.com/）&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jqwidgets.com/）&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;这个表格框架还是相当的强大的，你能想到的，你将用到的都为你提供了，总之一两句话表达不彻底，需要你去亲自体验！不过有些浏览器兼容可能会出些问题，我在使用过程中由于兼容问题，我修改了其内核js文件解决的。

DEMO体验地址：http://www.jqwidgets.com/jquery-widgets-demo/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/jqwidgets.png&quot; alt=&quot;Alt text&quot; title=&quot;表格&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、界面风格&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;3.1、 semantic-ui (&lt;a href=&quot;http://semantic-ui.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://semantic-ui.com/&lt;/a&gt;) &lt;/p&gt;
&lt;p&gt;3.2、 topcoat (&lt;a href=&quot;http://topcoat.io/topcoat/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://topcoat.io/topcoat/&lt;/a&gt;) &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1、布局框架&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; 访问地址：&lt;a href=&quot;http://layout.jquery-dev.com/index.cfm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://layout.jquery
    
    </summary>
    
      <category term="UI" scheme="http://www.soujava.com/categories/UI/"/>
    
    
      <category term="界面框架" scheme="http://www.soujava.com/tags/%E7%95%8C%E9%9D%A2%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>页面中添加&#39;ENTER&#39;键点击事件</title>
    <link href="http://www.soujava.com/2016-06-30-%E9%A1%B5%E9%9D%A2%E4%B8%AD%E6%B7%BB%E5%8A%A0-ENTER-%E9%94%AE%E7%82%B9%E5%87%BB%E4%BA%8B%E4%BB%B6/"/>
    <id>http://www.soujava.com/2016-06-30-页面中添加-ENTER-键点击事件/</id>
    <published>2016-06-30T08:31:17.000Z</published>
    <updated>2016-07-01T08:33:45.962Z</updated>
    
    <content type="html">&lt;p&gt;通常有以下场景：&lt;br&gt;当输入表单完成后直接按“Enter”键进行快捷提交；当操作一个共时，弹出的提示询问框，然后直接按“Enter”键确认。&lt;br&gt;那么我们只需要通过获取当前点击的键码是否是enter键的码值即可！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;jquery&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&amp;quot;body&amp;quot;).keydown(function(e){
    if(e.keyCode==&amp;quot;13&amp;quot;){
        alert(&amp;apos;点击了Enter键&amp;apos;);
    }
});
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;javascript&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;document.body.onclick=function(){
    if(e.keyCode==&amp;quot;13&amp;quot;){
       alert(&amp;apos;点击了Enter键&amp;apos;);
    }
};
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;通常有以下场景：&lt;br&gt;当输入表单完成后直接按“Enter”键进行快捷提交；当操作一个共时，弹出的提示询问框，然后直接按“Enter”键确认。&lt;br&gt;那么我们只需要通过获取当前点击的键码是否是enter键的码值即可！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;jquery&lt;/stron
    
    </summary>
    
      <category term="javascript" scheme="http://www.soujava.com/categories/javascript/"/>
    
    
      <category term="添加enter事件" scheme="http://www.soujava.com/tags/%E6%B7%BB%E5%8A%A0enter%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>关闭父窗口刷新子窗口</title>
    <link href="http://www.soujava.com/2016-06-30-%E5%85%B3%E9%97%AD%E7%88%B6%E7%AA%97%E5%8F%A3%E5%88%B7%E6%96%B0%E5%AD%90%E7%AA%97%E5%8F%A3/"/>
    <id>http://www.soujava.com/2016-06-30-关闭父窗口刷新子窗口/</id>
    <published>2016-06-30T08:21:45.000Z</published>
    <updated>2016-07-01T08:42:45.764Z</updated>
    
    <content type="html">&lt;p&gt;比如我访问index.html页面，其中一个功能模块需要弹出(新打开)other.html，勾选某些数据，勾选完成后，关闭other.html，并且index.html随着关闭other.html事件而刷新。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;父窗口-index.html&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; &amp;lt;html&amp;gt;  
 &amp;lt;head&amp;gt;  
  &amp;lt;title&amp;gt;index.htmll&amp;lt;/title&amp;gt;  
  &amp;lt;meta name=&amp;quot;Generator&amp;quot; content=&amp;quot;EditPlus&amp;quot;&amp;gt;  
  &amp;lt;meta name=&amp;quot;Author&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;  
  &amp;lt;meta name=&amp;quot;Keywords&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;  
  &amp;lt;meta name=&amp;quot;Description&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;  
    &amp;lt;SCRIPT LANGUAGE=&amp;quot;JavaScript&amp;quot;&amp;gt;  
    &amp;lt;!--   
    function clicks(){   
     window.open(&amp;quot;other.html&amp;quot;);   
    }   
    //--&amp;gt;  
    &amp;lt;/SCRIPT&amp;gt;  
 &amp;lt;/head&amp;gt;  
 &amp;lt;body&amp;gt;  
 &amp;lt;a  onClick=&amp;quot;clicks();&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;选择数据&amp;lt;/a&amp;gt;  
 &amp;lt;/body&amp;gt;  
&amp;lt;/html&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;子窗口-other.html&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; &amp;lt;html&amp;gt;  
 &amp;lt;head&amp;gt;  
  &amp;lt;title&amp;gt;子窗口&amp;lt;/title&amp;gt;  
  &amp;lt;meta name=&amp;quot;Generator&amp;quot; content=&amp;quot;EditPlus&amp;quot;&amp;gt;  
  &amp;lt;meta name=&amp;quot;Author&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;  
  &amp;lt;meta name=&amp;quot;Keywords&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;  
  &amp;lt;meta name=&amp;quot;Description&amp;quot; content=&amp;quot;&amp;quot;&amp;gt;  
&amp;lt;SCRIPT LANGUAGE=&amp;quot;JavaScript&amp;quot;&amp;gt;  
&amp;lt;!--   
function Close()   
{
  window.opener.location.href=&amp;quot;index.html&amp;quot;;
}
//--&amp;gt;  
&amp;lt;/script&amp;gt;  
 &amp;lt;/head&amp;gt;  
 &amp;lt;body&amp;gt;  
 &amp;lt;a href=&amp;quot;javascript:Close();&amp;quot;&amp;gt;关闭当前子窗口，打开父窗口&amp;lt;/a&amp;gt;  
 &amp;lt;/body&amp;gt;  
&amp;lt;/html&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;比如我访问index.html页面，其中一个功能模块需要弹出(新打开)other.html，勾选某些数据，勾选完成后，关闭other.html，并且index.html随着关闭other.html事件而刷新。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;父窗口-index.html&lt;/s
    
    </summary>
    
      <category term="javascript" scheme="http://www.soujava.com/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://www.soujava.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Java was started but returned exit code异常</title>
    <link href="http://www.soujava.com/2016-06-30-Java-was-started-but-returned-exit-code%E5%BC%82%E5%B8%B8/"/>
    <id>http://www.soujava.com/2016-06-30-Java-was-started-but-returned-exit-code异常/</id>
    <published>2016-06-30T07:56:30.000Z</published>
    <updated>2016-06-30T08:01:09.494Z</updated>
    
    <content type="html">&lt;p&gt;今天eclipse启动时一直报个错：Java was started but returned exit code=-805306369………等等&lt;br&gt;将eclipse.ini内容改为：&lt;br&gt;（注：最下面的几行是调整后的配置）&lt;/p&gt;
&lt;p&gt;-startup&lt;br&gt;plugins/org.eclipse.equinox.launcher_1.1.0.v20100507.jar&lt;br&gt;–launcher.library&lt;br&gt;plugins/org.eclipse.equinox.launcher.win32.win32.x86_64_1.1.0.v20100503&lt;br&gt;-product&lt;br&gt;org.eclipse.epp.package.jee.product&lt;br&gt;–launcher.defaultAction&lt;br&gt;openFile&lt;br&gt;–launcher.XXMaxPermSize&lt;br&gt;256M&lt;br&gt;-showsplash&lt;br&gt;org.eclipse.platform&lt;br&gt;-vmargs&lt;br&gt;-Dosgi.requiredJavaVersion=1.5&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-Xms1024m&lt;br&gt;-Xmx1024m&lt;br&gt;-XX:MaxPermSize=128m&lt;br&gt;-XX:+CMSClassUnloadingEnabled&lt;br&gt;-XX:+CMSPermGenSweepingEnabled&lt;br&gt;-XX:+UseParallelGC&lt;br&gt;-XX:CompileCommand=exclude,org/eclipse/core/internal/dtree/DataTreeNode,forwardDeltaWith&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天eclipse启动时一直报个错：Java was started but returned exit code=-805306369………等等&lt;br&gt;将eclipse.ini内容改为：&lt;br&gt;（注：最下面的几行是调整后的配置）&lt;/p&gt;
&lt;p&gt;-startup&lt;br&gt;pl
    
    </summary>
    
      <category term="IDE" scheme="http://www.soujava.com/categories/IDE/"/>
    
    
      <category term="eclipse" scheme="http://www.soujava.com/tags/eclipse/"/>
    
  </entry>
  
  <entry>
    <title>添加KEY后，每次push时让输入密码</title>
    <link href="http://www.soujava.com/2016-06-28-%E6%B7%BB%E5%8A%A0KEY%E5%90%8E%EF%BC%8C%E6%AF%8F%E6%AC%A1push%E6%97%B6%E8%AE%A9%E8%BE%93%E5%85%A5%E5%AF%86%E7%A0%81/"/>
    <id>http://www.soujava.com/2016-06-28-添加KEY后，每次push时让输入密码/</id>
    <published>2016-06-28T10:03:13.000Z</published>
    <updated>2016-07-01T08:47:34.526Z</updated>
    
    <content type="html">&lt;p&gt;我的操作系统是window环境，首先在电脑上面已经在.ssh/目录下面生成了对应的key文件，并且将id_rsa.pub文件中的公钥添加到我github账户上面的sshkey模块中&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当从github上面clone项目时，还老是提示输入密码，如下图：&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Enter passphrase for key ‘/c/Users/maps/.ssh/id_rsa’:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/getIp.jpg&quot; alt=&quot;Alt text&quot; title=&quot;git push&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;按照先后顺序执行以下两条命令：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;$ ssh-agent bash&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ ssh-add /c/Users/maps/.ssh/id_rsa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注：这两条命令必须按照先后顺序执行；第二条命令中后半部分就是你的私钥文件id_rsa的绝对路径&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;通过以上两个命令就可以解决上面的问题，然后我们输入ssh -T 命令测试连接git服务,提示测试成功&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/gitTestconnsucc.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;最后来一个完整的图片&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/gitpushinputpasssucc.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我的操作系统是window环境，首先在电脑上面已经在.ssh/目录下面生成了对应的key文件，并且将id_rsa.pub文件中的公钥添加到我github账户上面的sshkey模块中&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当从github上面clone项目时，还老是提示输入密码，如下图：
    
    </summary>
    
      <category term="github" scheme="http://www.soujava.com/categories/github/"/>
    
    
      <category term="github" scheme="http://www.soujava.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>通过gitBook让网站更实用</title>
    <link href="http://www.soujava.com/2016-06-28-%E9%80%9A%E8%BF%87gitBook%E8%AE%A9%E7%BD%91%E7%AB%99%E6%9B%B4%E5%AE%9E%E7%94%A8/"/>
    <id>http://www.soujava.com/2016-06-28-通过gitBook让网站更实用/</id>
    <published>2016-06-28T09:48:54.000Z</published>
    <updated>2016-06-29T03:25:33.126Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;前两篇文章中介绍了使用github Pages功能生成静态博客系统，并且也选择了系统提供的几个博客模板，但是提供的博客模板固然不错，但是总觉得如果有目录导航整个文章目录更便于阅读，就如书本似的(左侧目录+右侧内容文章);&lt;blockquote&gt;
&lt;p&gt;csdn上面的博客查看方式&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/mycsdnblog.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;br&gt; &lt;/p&gt;&lt;p&gt;采用gitBook构建的博客&lt;br&gt; &lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/mygitbook.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;br&gt; &lt;/p&gt;&lt;p&gt;比如上面两个博客图片比对可以感受一下(csdn上面博客和采用gitBook构建的博客)&lt;/p&gt;
 &lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;gitBook是什么&lt;br&gt; &lt;p&gt;GitBook是一个基于 Node.js 的命令行工具，可使用 Github/Git 和 Markdown 来制作精美的电子书，GitBook 并非关于 Git 的教程。&lt;br&gt; GitBook支持输出多种文档格式：&lt;br&gt; ·静态站点：GitBook默认输出该种格式，生成的静态站点可直接托管搭载Github Pages服务上；&lt;br&gt; ·PDF：需要安装gitbook-pdf依赖；&lt;br&gt; ·eBook：需要安装ebook-convert；&lt;br&gt; ·单HTML网页：支持将内容输出为单页的HTML，不过一般用在将电子书格式转换为PDF或eBook的中间过程；&lt;br&gt; ·JSON：一般用于电子书的调试或元数据提取。&lt;br&gt; 使用GitBook制作电子书，必备两个文件：README.md和SUMMARY.md&lt;br&gt; &lt;/p&gt;&lt;p&gt;官网:&lt;a href=&quot;https://www.gitbook.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.gitbook.com&lt;/a&gt; &lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如何使用gitBook书写文章，需要安装node.js、gitBook、markdown，下面介绍：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1)、下载、安装node.js;官网：&lt;a href=&quot;http://nodejs.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://nodejs.cn/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/nodejsdownload.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;下载完成后，直接双击、下一步下一步的进行傻瓜式安装即可！&lt;/p&gt;
&lt;p&gt;2)、通过window命令安装gitbook服务；&lt;br&gt;&lt;code&gt;npm install gitbook -g&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/1.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;3)、通过window命令安装gitbook命令服务（gitbook-cli）；&lt;br&gt;&lt;code&gt;npm install gitbook-cli -g&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4)、下载安装markdown；&lt;br&gt;下载地址：&lt;a href=&quot;http://markdownpad.com/download.html；&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://markdownpad.com/download.html；&lt;/a&gt;&lt;br&gt;下载完成后直接下一步下一步安装，安装成功后桌面出现快捷启动图标&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/markdown.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;5)、使用gitbook开始制作电子书式的博客系统；首先在你的硬盘上面新建你个存放你博客的目录，比如BLOG;然后通过window环境下面的cmd命令窗口切换到该目录下面，通过gitbook init命令初始化gitbook服务的目录结构：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/3.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;6)、首先介绍一下gitbook init命令的作用，首先读取SUMMARY.md文件中的目录定义结构，然后会按照该目录结构在对应博客文件夹下面生成对应的文件目录结构,&lt;br&gt;SUMMARY.md文件内容如图&lt;br&gt; &lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/gitinit.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;运行gitbook init命令后生成的目录结构如图&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/gitinitfile.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;7)、然后通过gitbook build命令将目录结构中的.md文件(markdown语法格式的文件)转换生成.html文件(静态网页文件)，可以用浏览器浏览查看;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/gitbuildbook.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;8)、截止到这一步我们通过gitbook构建电子书式的博客文章已经完成了，我们只需要把第7)步骤中通过gitbook build命令生成的_book文件夹下面的文件通过git提交到自己github账户下面的博客项目目录下面即可(如果之前自己账户下面的github博客没有用gitbook服务生成的目录构建博客目录的话，可以删除根目录下面旧的目录文件；如果之前已经用过gitbook服务生成的静态目录结构构建过博客目录，那么我们只需要通过git push覆盖旧文件即可)；&lt;br&gt;9)、上面没有讲到如何用markdown工具，其实在第6)步骤中通过gitbook init命令生成的以.md文件组成的目录结构就是markdown的文件，我们需要用markdown工具进行编辑操作，当然.md文件也可以用其他编辑器工具编写，只是个人感觉用markdown工具更方便一些，至于如何用markdown工具编写网页，需要你去先了解一下markdown的语法；这里就不过多介绍了，因为语法内容挺多的！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;总结&lt;blockquote&gt;
&lt;p&gt;安装node.js、gitbook、markdown&lt;/p&gt;
&lt;p&gt;通过gitbook init命令初始化目录结构&lt;/p&gt;
&lt;p&gt;通过markdown工具编辑目录结构文章对应的.md文件&lt;/p&gt;
&lt;p&gt;通过gitbook build命令将.md文件转换生成.html静态网页文件(默认自动存放在_book文件夹下)&lt;/p&gt;
&lt;p&gt;通过git push命令将_book文件夹下面生成的.html静态文件推送到自己github账户下面的博客系统项目工程目录下面&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;前两篇文章中介绍了使用github Pages功能生成静态博客系统，并且也选择了系统提供的几个博客模板，但是提供的博客模板固然不错，但是总觉得如果有目录导航整个文章目录更便于阅读，就如书本似的(左侧目录+右侧内容文章);&lt;blockquote&gt;
&lt;p&gt;csdn上
    
    </summary>
    
      <category term="github" scheme="http://www.soujava.com/categories/github/"/>
    
    
      <category term="github" scheme="http://www.soujava.com/tags/github/"/>
    
  </entry>
  
</feed>
