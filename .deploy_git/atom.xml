<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>soujava</title>
  <subtitle>记录未知的，牢记已知的</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.soujava.com/"/>
  <updated>2016-08-23T09:50:25.910Z</updated>
  <id>http://www.soujava.com/</id>
  
  <author>
    <name>马平升</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>thymeleaf教程2-后台数据封装与页面渲染</title>
    <link href="http://www.soujava.com/thymeleaf%E6%95%99%E7%A8%8B2-%E5%90%8E%E5%8F%B0%E6%95%B0%E6%8D%AE%E5%B0%81%E8%A3%85%E4%B8%8E%E9%A1%B5%E9%9D%A2%E6%B8%B2%E6%9F%93/"/>
    <id>http://www.soujava.com/thymeleaf教程2-后台数据封装与页面渲染/</id>
    <published>2016-08-23T08:32:50.000Z</published>
    <updated>2016-08-23T09:50:25.910Z</updated>
    
    <content type="html">&lt;p&gt;我们使用模板引擎的过程中，页面上面的数据肯定需要从后台传递过来，然后把数据装载到页面对应区域中，所以我们来看看如果把后台的数据在前端页面渲染。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、添加一个表单页面–登陆操作&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/thy6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、新建业务控制器(doLogin)–获取登陆表单中提交的数据&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;String username = request.getParameter(&lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  	String password = request.getParameter(&lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  	&lt;span class=&quot;comment&quot;&gt;//实例化一个thymeleaf文本上下文&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      WebContext ctx = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebContext(request, response, servletContext, request.getLocale());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//将前端登陆表单页面提交过来的数据封装到thymeleaf上下文中&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      ctx.setVariable(&lt;span class=&quot;string&quot;&gt;&quot;username&quot;&lt;/span&gt;, username);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      ctx.setVariable(&lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;, password);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      &lt;span class=&quot;comment&quot;&gt;//调用模板引擎转向到对应的模板页面--desc模板页面&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      templateEngine.process(&lt;span class=&quot;string&quot;&gt;&quot;desc&quot;&lt;/span&gt;, ctx, response.getWriter());&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、新建模板页面(desc)–显示doLogin控制器中封装的数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/thy7.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注：读取数据使用${XX}这种形式，是不是感觉很熟悉，EL表达式；而向页面html元素中渲染数据使用thymeleaf提供的标签th:text=”${XX}”这种形式。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、编译工程项目–启动web服务器测试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、在登陆表单中输入对应的用户名和密码，点击提交按钮&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/thy1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;1、可以看到提交表单后进入到doLogin控制器中，控制器获取数据并封装数据，然后转向到模板页面中渲染数据。&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/thy2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;五、在控制器doLogin中封装一些稍微复杂的数据集-数组&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、我们声明一个类型数组，然后把数组封装到thymeleaf上下文中&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;String[] types = &amp;#123;&lt;span class=&quot;string&quot;&gt;&quot;足球&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;篮球&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;羽毛球&quot;&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   ctx.setVariable(&lt;span class=&quot;string&quot;&gt;&quot;types&quot;&lt;/span&gt;, types);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2、在desc模板页面中遍历显示封装好的集合数据&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;p th:each=&quot;type : $&amp;#123;types&amp;#125;&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   	&amp;lt;span th:text=&quot;$&amp;#123;type&amp;#125;&quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/p&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;em&gt;注：上面渲染集合数据到模板页面的代码中我们采用了th:each的方法遍历数据，这是thymeleaf提供的，其实thymeleaf提供了非常多并且非常强大的方法，后续再一一说明。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;3、针对刚刚封装好的集合数据到页面测试一下&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/thy3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/thy4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;六、在控制器doLogin中封装一些稍微复杂的数据集-实体Bean&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、我们新建一个User的Bean实体&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String firstName = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String lastName = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String nationality = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Integer age = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;；&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String firstName, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String lastName, &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String nationality, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; Integer age) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.firstName = firstName;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.lastName = lastName;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.nationality = nationality;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.age = age;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2、在我们的doLogin业务控制器中实例化该User实体bean，并且把bean数据实体封装到thymeleaf上下文中&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;User user = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User(&lt;span class=&quot;string&quot;&gt;&quot;zhang&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;san&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;china&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      ctx.setVariable(&lt;span class=&quot;string&quot;&gt;&quot;user&quot;&lt;/span&gt;, user);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3、在desc模板页面中显示封装好的User实体bean数据&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;p th:text=&quot;$&amp;#123;user.firstName+&#39;:&#39;+user.lastName+&#39;:&#39;+user.nationality+&#39;:&#39;+user.age&amp;#125;&quot;&amp;gt;&amp;lt;/p&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注：我们在获取bean中的属性数据时，仍然采用EL表达式${user.firstName}的方式；然后将获取的数据显示到html元素中用th:text方法；只不过我们使用th:text时在中间使用了字符串拼接将多个属性拼接显示。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;六、总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、我们在执行业务操作的时候，需要把后台的数据集封装到thymeleaf上下文中，我们可以封装组合各种我们需要的数据，如：字符串、集合、实体bean等等&lt;br&gt;2、通过thymeleaf模板引擎转向到对应的模板页面&lt;br&gt;3、用thymeleaf提供的方法渲染后台封装的数据到页面中&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我们使用模板引擎的过程中，页面上面的数据肯定需要从后台传递过来，然后把数据装载到页面对应区域中，所以我们来看看如果把后台的数据在前端页面渲染。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、添加一个表单页面–登陆操作&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://souja
    
    </summary>
    
      <category term="thymeleaf" scheme="http://www.soujava.com/categories/thymeleaf/"/>
    
    
      <category term="thymeleaf" scheme="http://www.soujava.com/tags/thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>jquery获取单选按钮值的诡异之处</title>
    <link href="http://www.soujava.com/jquery%E8%8E%B7%E5%8F%96%E5%8D%95%E9%80%89%E6%8C%89%E9%92%AE%E5%80%BC%E7%9A%84%E8%AF%A1%E5%BC%82%E4%B9%8B%E5%A4%84/"/>
    <id>http://www.soujava.com/jquery获取单选按钮值的诡异之处/</id>
    <published>2016-08-21T04:17:10.000Z</published>
    <updated>2016-08-21T05:08:28.128Z</updated>
    
    <content type="html">&lt;p&gt;最近在使用jquery获取表单中选中的单选按钮的值时，发现了一个诡异的问题，那就是当你使用[checked]这个方式获取选中的单选按钮值时，能不能获取选中的值跟你前面用的选择器方式有关系，当你使用:radio[name=’types’]这种方式获取选中的值时是没有问题的，但是当你使用[type=’radio’][name=’language’]这种方式获取选中的值时是有问题的（如果单选按钮组中有默认选中的按钮，那么这种方式一直获取的都是默认选中的按钮；如果单选按钮组中没有默认选中的按钮，那么这种方式获取不到选中的单选按钮的值）。举例如下：&lt;/p&gt;
&lt;p&gt;表单元素如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;input type=&lt;span class=&quot;string&quot;&gt;&quot;radio&quot;&lt;/span&gt; name=&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;  value=&lt;span class=&quot;string&quot;&gt;&quot;php&quot;&lt;/span&gt;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;input type=&lt;span class=&quot;string&quot;&gt;&quot;radio&quot;&lt;/span&gt; name=&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;  value=&lt;span class=&quot;string&quot;&gt;&quot;mysql&quot;&lt;/span&gt;/&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;input type=&lt;span class=&quot;string&quot;&gt;&quot;radio&quot;&lt;/span&gt; name=&lt;span class=&quot;string&quot;&gt;&quot;language&quot;&lt;/span&gt;  value=&lt;span class=&quot;string&quot;&gt;&quot;java&quot;&lt;/span&gt;/&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、方式一 [checked] (正确)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过使用&lt;code&gt;[checked]&lt;/code&gt;获取选中的单选按钮的值，类型选择器使用的&lt;code&gt;:radio&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&amp;apos;input:radio[name=&amp;quot;language&amp;quot;][checked]&amp;apos;).val()；
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/jqueryRadio2.png&quot; alt=&quot;Alt text&quot; title=&quot;可以获取单选值&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注：这种方式&lt;code&gt;可以&lt;/code&gt;获取选中的单选按钮的值，如果没有选择任何单选按钮，则获取的值为undefined。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、方式二 [checked] (错误)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;通过使用&lt;code&gt;[checked]&lt;/code&gt;获取选中的单选按钮的值，，类型选择器使用的&lt;code&gt;[type=&amp;quot;radio&amp;quot;]&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&amp;apos;input[type=&amp;quot;radio&amp;quot;][name=&amp;quot;language&amp;quot;][checked]&amp;apos;).val()；
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/jqueryRadio1.png&quot; alt=&quot;Alt text&quot; title=&quot;不可以获取单选值&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注：这种方式&lt;code&gt;不可以&lt;/code&gt;获取选中的单选按钮的值，获取的值始终为undefined。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、小结 &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;上面两种获取单选按钮选择中的方式中唯一差别的地方就是类型选择器的方式一种是标准的类型选择器(type=”radio”)、一种是伪类选择器(:radio);然后到jquery官方网站查看官网文档可以看到：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/jqueryRadio3.png&quot; alt=&quot;Alt text&quot; title=&quot;官方文档&quot;&gt;&lt;/p&gt;
&lt;p&gt;官网文档中关于选择器的描述大致这样说：$(“:radio”)和$(“[type=radio]”)是等价的,在效率方面还更倾向使用标准的类型选择器&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、方式三 :checked (没有任何问题)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;[type=&amp;quot;radio&amp;quot;]&lt;/code&gt;类型选择器：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&amp;apos;input[type=&amp;quot;radio&amp;quot;][name=&amp;quot;language&amp;quot;]:checked&amp;apos;).val()；
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用&lt;code&gt;:radio&lt;/code&gt;伪类选择器：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(&amp;apos;input[type=&amp;quot;radio&amp;quot;][name=&amp;quot;language&amp;quot;]:checked&amp;apos;).val()；
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/jqueryRadio4.png&quot; alt=&quot;Alt text&quot; title=&quot;获取值&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注：方式三种中在使用:checked方式的前提下，不管使用类型选择器还是使用伪类选择器都是可以获取选中的单选按钮的值的！&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;五、总结&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;获取单选按钮元素选中的值时，统一采用&lt;code&gt;:checked&lt;/code&gt;这种方式获取，不要再使用&lt;code&gt;[checked]&lt;/code&gt;或者&lt;code&gt;[checked=&amp;quot;checked&amp;quot;]&lt;/code&gt;这种方式。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在使用jquery获取表单中选中的单选按钮的值时，发现了一个诡异的问题，那就是当你使用[checked]这个方式获取选中的单选按钮值时，能不能获取选中的值跟你前面用的选择器方式有关系，当你使用:radio[name=’types’]这种方式获取选中的值时是没有问题的，但
    
    </summary>
    
      <category term="javascript" scheme="http://www.soujava.com/categories/javascript/"/>
    
    
      <category term="jquery" scheme="http://www.soujava.com/tags/jquery/"/>
    
  </entry>
  
  <entry>
    <title>整型字面值与进制运算之间的关系</title>
    <link href="http://www.soujava.com/%E6%95%B4%E5%9E%8B%E5%AD%97%E9%9D%A2%E5%80%BC%E4%B8%8E%E8%BF%9B%E5%88%B6%E8%BF%90%E7%AE%97%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB/"/>
    <id>http://www.soujava.com/整型字面值与进制运算之间的关系/</id>
    <published>2016-08-20T09:19:18.000Z</published>
    <updated>2016-08-20T09:57:54.772Z</updated>
    
    <content type="html">&lt;p&gt;何为字面值？说白了就是一眼看上去的内容值，比如下面的分别用几个不同进制(二进制、八进制、十进制、十六进制)表示法表示的自面值信息&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;二进制表示：int i = 0b111010110;其实0b111010110就是字面值&lt;/li&gt;
&lt;li&gt;八进制表示：long l3 = 0123;其实0123就是字面值&lt;/li&gt;
&lt;li&gt;十进制表示：long l2 = 225;其实225就是字面值&lt;/li&gt;
&lt;li&gt;十六进制表示：long l5 = 0x12af;其实0x12af就是二进制值&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;好了上面已经描述了自面值的概念，那么整型自面值就是整数类型的字面值喽(哈哈没有开玩笑)。下面说明整型字面值与不同进制之间的关系。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、十进制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;地球上被人类采用的通用的数值表示方式，比如再正常不过的0、2、5、32、100等等；我们眼睛看到的数值就是表示其真实的值，不像其它进制表示方式，我们眼睛看到的值并不一定是其真实的值，所以我们人类一般采用十进制表示方式(10进制比较诚实，人类比较懒呗)。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、二进制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;计算机唯一能识别的只有0和1，而这里的0和1就是二进制，绝对不是指数字的0和1，这也是比较容易引起混淆的地方；&lt;/p&gt;
&lt;p&gt;举个常见的例子：我们生活中常用的算账用的计算器，我们输入100+30然后按完“=”号后，计算器屏幕上面会显示两个数相加后的结果130，    这个过程我输入的数字(100、30)或者按的按钮(+、=)和最后输出的130这几个动作，都是我们人类自己能很好识别的；我们输入十进制数字。然后计算器接收后是不识别的，实际上这个过程经历了非常复杂的转换过程：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1)、十进制数会被转换成二进制，也就是把100转化成只有0和1组成的一串数字（1100100）；
    30转换成二进制数字(11110)
2)、然后计算器把转换后的两个二进制数进行相加，最终得到二进制结果：10000010(130)；
    实际上二进制之间加法很简单，只需要把两个二进制数右对齐，然后上下两个数(0或者1)相加，相加的和逢2进1就行了。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;二、八进制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;除了人类使用的10进制、计算机使用的二进制外，其实还有八进制（以0开头，以8为基数运算）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;8进制数字的范围是0~7,也就是说用8进制形式标示数值时，需要用0开头，
并且标示数值串中只能包含0~7之间的数字，例如：
int i = 0123;
int m = 01354;
int n =0238;（不合格）

8进制表示的数值怎么计算成人类识别的10进制呢，其实非常简单，只需要按照规则来计算就行了，
我们就拿int i = 013;这个变量定义来讲，一共三个数字(0、1、3)；那么我们从最右侧3用索引数数就是(0[2]、1[1]、3[0]),方括号中为从右侧开始计数的索引。

比如013=3*8的0次方+1*8的1次方=3+8=11；
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;三、十六进制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;16进制的数字范围是0~15，而阿拉伯数字只有0~9，所以分别用A~F（a~f）替代数字10~15；也就是说用16进制表示的数值串中只能包括0~9和a|A~f|F；十六进制表示方式就是以0X开头，以16为基数进行运算&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;可以参照上面的八进制计算规则，long l5 = 0x12af;定义的变量用十进制表示方法就是：
0x12af表示的十进制数为：15*16的0次方+10*16的1次方+2*16的2次方+1*16的3次方=4783
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;四、二进制表示十进制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;从jdk7开始，我们可以直接定义变量的时候可以用二进制表示十进制字面值，不过必须使用0b或0B作为数值的前缀。&lt;/p&gt;
&lt;p&gt;比如：int x = 0b1010;&lt;br&gt;&lt;em&gt;其实x的真实值是二进制1010运算十进制后的值10.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;int u = 0B111010110;&lt;br&gt;&lt;em&gt;其实u的真实值是二进制111010110运算十进制后的值470.&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;何为字面值？说白了就是一眼看上去的内容值，比如下面的分别用几个不同进制(二进制、八进制、十进制、十六进制)表示法表示的自面值信息&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;二进制表示：int i = 0b111010110;其实0b111010110就是字面值&lt;/li&gt;
&lt;li&gt;八进制表示
    
    </summary>
    
      <category term="java" scheme="http://www.soujava.com/categories/java/"/>
    
    
      <category term="进制运算" scheme="http://www.soujava.com/tags/%E8%BF%9B%E5%88%B6%E8%BF%90%E7%AE%97/"/>
    
  </entry>
  
  <entry>
    <title>Redis--安装</title>
    <link href="http://www.soujava.com/Redis-%E5%AE%89%E8%A3%85/"/>
    <id>http://www.soujava.com/Redis-安装/</id>
    <published>2016-08-19T09:21:43.000Z</published>
    <updated>2016-08-19T09:26:17.224Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;一、下载安装包&lt;/strong&gt;&lt;br&gt;  下载redis安装包，下载方式很多比如如下方式都可以：&lt;br&gt;    1)、到官网下载&lt;a href=&quot;http://redis.io需要的版本&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://redis.io需要的版本&lt;/a&gt;&lt;br&gt;    2)、在linux系统中用命令下载 $ wget &lt;a href=&quot;http://download.redis.io/releases/redis-2.8.17.tar.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://download.redis.io/releases/redis-2.8.17.tar.gz&lt;/a&gt;&lt;br&gt;    下载成功后得到redis-2.8.17.tar.gz安装包&lt;br&gt;&lt;strong&gt;二、安装&lt;/strong&gt;&lt;br&gt;    1)、用命令解压缩安装包&lt;br&gt;       $ tar xzf redis-2.8.17.tar.gz&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;2)、进入解压后的文件中
     $ cd redis-2.8.17

3)、编译安装
      $ make
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;  注：make完后 redis-2.8.17目录下会出现编译后的redis服务程序redis-server,还有用于测试的客户端程序redis-cli&lt;br&gt;&lt;strong&gt;三、启动服务&lt;/strong&gt;&lt;br&gt;     1)、进入到redis安装目录src下面&lt;br&gt;          $ cd /usr/local/redis-2.8.17/src&lt;br&gt;     2)、启动服务操作，启动服务主要有两种方式：&lt;br&gt;           A：采用默认配置方式启动(不推荐)&lt;br&gt;                $ ./redis-server&lt;br&gt;           B：采用制定配置文件启动(推荐)&lt;br&gt;                 $ ./redis-server ../redis.conf&lt;br&gt;     注：redis.conf是一个默认的配置文件。我们可以根据需要使用自己的配置文件,修改redis.conf  配置文件修改 daemonize yes ；该配置为使redis启动后可以后台运行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、测试&lt;/strong&gt;&lt;br&gt;   1)、进入安装目录，运行redis-cli&lt;br&gt;         $ ./redis-cli&lt;br&gt;         redis&amp;gt; set username maps&lt;br&gt;         redis&amp;gt;get username&lt;br&gt;         “maps” &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;一、下载安装包&lt;/strong&gt;&lt;br&gt;  下载redis安装包，下载方式很多比如如下方式都可以：&lt;br&gt;    1)、到官网下载&lt;a href=&quot;http://redis.io需要的版本&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ht
    
    </summary>
    
      <category term="Redis" scheme="http://www.soujava.com/categories/Redis/"/>
    
    
      <category term="Redis安装" scheme="http://www.soujava.com/tags/Redis%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Mysql--Lock wait timeout exceeded try restarting transaction</title>
    <link href="http://www.soujava.com/Mysql-Lock-wait-timeout-exceeded-try-restarting-transaction/"/>
    <id>http://www.soujava.com/Mysql-Lock-wait-timeout-exceeded-try-restarting-transaction/</id>
    <published>2016-08-19T08:46:36.000Z</published>
    <updated>2016-08-19T08:50:24.341Z</updated>
    
    <content type="html">&lt;p&gt;一个业务正在操作mysql过程中，突然报提示错误信息：Lock wait timeout exceeded; try restarting transaction。&lt;br&gt;查询发现问题原因是，在执行操作的表被另外一个操作锁定，当前操作等待另外一个操作完成时提示超时。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、临时解决办法&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;执行以下脚本登录mysql：mysql -h 192.168.0.166 -u user -ppassword&lt;/li&gt;
&lt;li&gt;执行select * from information_schema.innodb_trx\G;查询当前处于锁等待的进程。查询结果只需要关注trx_mysql_thread_id所对应的值。&lt;/li&gt;
&lt;li&gt;执行show processlist;查询当前的所有进程，找到对应的ID，执行kill命令，kill id。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;二、Mysql数据库设置&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置innodb_lock_wait_timeout参数。通过show variables like ‘innodb_lock_wait_timeout’;查看当前设置的值。&lt;/li&gt;
&lt;li&gt;执行set global innodb_lock_wait_timeout=120;设置超时时间。&lt;/li&gt;
&lt;li&gt;设置是否自动提交事务。通过select @@autocommit;查询是否自动提交事务（1代表自动提交，0代表不自动提交）。执行set global autocommit=1;设置自动提交。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;注：这里设置自动提交事务操作针对高并发业务是会出问题的，所以视情况而定！&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一个业务正在操作mysql过程中，突然报提示错误信息：Lock wait timeout exceeded; try restarting transaction。&lt;br&gt;查询发现问题原因是，在执行操作的表被另外一个操作锁定，当前操作等待另外一个操作完成时提示超时。&lt;/p&gt;
    
    </summary>
    
      <category term="Mysql" scheme="http://www.soujava.com/categories/Mysql/"/>
    
    
      <category term="Mysql" scheme="http://www.soujava.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>MySql安装后添加的用户不能远程连接登陆</title>
    <link href="http://www.soujava.com/MySql%E5%AE%89%E8%A3%85%E5%90%8E%E6%B7%BB%E5%8A%A0%E7%9A%84%E7%94%A8%E6%88%B7%E4%B8%8D%E8%83%BD%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E7%99%BB%E9%99%86/"/>
    <id>http://www.soujava.com/MySql安装后添加的用户不能远程连接登陆/</id>
    <published>2016-08-19T08:23:54.000Z</published>
    <updated>2016-08-19T08:41:56.928Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;一、添加一个用户fileserver并授权操作&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/mysql1.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注：添加一个可以访问所有数据库、用户名为fileserver、可以在本地和远程进行访问的、密码是fileserver的用户 &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、查询刚才添加的用户是否存在&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/mysql2.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注：可以看到刚才的fileserver用户已经创建完毕 &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、用刚才添加成功的用户登陆操作报异常&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/mysql3.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注：当用户刚才创建的用户登录并输入密码后时提示如下信息，这是因为当前的登录操作是在mysql本地客户端进行的，而上面的user表中没有对应localhost的fileserve的用户&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、在添加一个fileserver用户并分配可以本地localhost登录&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/mysql4.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;五、再查下刚才创建的用户是否已经存在&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/mysql5.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;六、再次用刚刚创建的fileserver登录操作，可以正常登录&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/mysql6.png&quot; alt=&quot;Alt text&quot;&gt;&lt;br&gt;&lt;em&gt;注：使用mysql -u 命令登录操作时默认使用localhost的域用户登录操作 &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;七、在另外一台IP地址的电脑上面安装Navicate工具，并且连接之前安装的mysql服务&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/mysql7.png&quot; alt=&quot;Alt text&quot;&gt;&lt;br&gt;&lt;em&gt;注：连接时提示连接错误，因为mysql服务没有对当前IP的电脑开放远程访问的权限&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;八、在mysql配置文件中配置该IP的访问操作&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/mysql8.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;九、配置完成后重启mysql服务&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/mysql9.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;十、再次在不同IP(192.168.0.203)地址电脑上面通过Navicate连接mysql服务操作，连接成功&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/mysql10.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;一、添加一个用户fileserver并授权操作&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/mysql1.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;注：添加一个可以访问所有数据库、用户
    
    </summary>
    
      <category term="Mysql" scheme="http://www.soujava.com/categories/Mysql/"/>
    
    
      <category term="Mysql" scheme="http://www.soujava.com/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>CentOS-6.4内核升级操作</title>
    <link href="http://www.soujava.com/CentOS-6-4%E5%86%85%E6%A0%B8%E5%8D%87%E7%BA%A7%E6%93%8D%E4%BD%9C/"/>
    <id>http://www.soujava.com/CentOS-6-4内核升级操作/</id>
    <published>2016-08-19T08:00:13.000Z</published>
    <updated>2016-08-19T08:15:57.871Z</updated>
    
    <content type="html">&lt;p&gt;Linux下涉及到系统内核的一些软件，需要对内核升级才能使用，例如Docker的最低要求是2.6.32-431等等。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;注意：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    如果在make menuconfig步骤报错，可尝试以下方法：&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;、修改scripts/kconfig/Makefile 文件&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;、找到HOSTLOADLIBES_mconf 在行末加入  -ltinfo&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、先查看当前centos的系统内核&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/linuxKenel1.png&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、下载内核包，如：linux-3.4.56.tar.xz&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;https:&lt;span class=&quot;comment&quot;&gt;//www.kernel.org/pub/linux/kernel/v3.x/linux-3.4.56.tar.xz&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;三、安装内核&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;# tar -Jxvf linux-3.4.56.tar.xz&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# mv linux-3.4.56 /usr/src/linux-3.4.56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# cd linux-3.4.56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# make mrproper #清除环境变量&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# make menuconfig &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# make clean&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# make bzImage&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# make modules&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# make modules_install&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;# make install&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、编辑/etc/grub.conf文件，将default=1改成default=0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;五、重启系统并检查内核&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Linux下涉及到系统内核的一些软件，需要对内核升级才能使用，例如Docker的最低要求是2.6.32-431等等。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div clas
    
    </summary>
    
      <category term="Linux" scheme="http://www.soujava.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.soujava.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>git搞着玩-新建本地仓库与分支合并</title>
    <link href="http://www.soujava.com/git%E6%90%9E%E7%9D%80%E7%8E%A9-%E6%96%B0%E5%BB%BA%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93/"/>
    <id>http://www.soujava.com/git搞着玩-新建本地仓库/</id>
    <published>2016-08-19T03:01:47.000Z</published>
    <updated>2016-08-19T07:38:48.596Z</updated>
    
    <content type="html">&lt;p&gt;用了git有一段时间了，在项目团队刚切入git时还是遇到了不少的阻力，各种质疑，为什么svn用的好好的突然转到git上面？为什么git操作这么复杂？等等等等；当然我作为逗比的我还是很愿意为他们一一诉说我对git的真爱的。当然并不是说svn不好，我可以说svn非常好，尤其某些场景更是强大至极，至少对于小团队或者单产品线研发模式来讲用svn是非常好的选择。我们之所以从svn平台切换到git上面主要是因为我们的研发路线是一个主产品线+N个项目定制线；并且主产品线会和其中的项目定制线进行彼此合并操作；&lt;/p&gt;
&lt;p&gt;再举个切实的例子，张三丰正在开发太极拳产品，并且已经发布了1.0版本，投入市场后非常受欢迎，当然也收集了一些用户的反馈，经过研发部讨论可以把一些建议并入主产品开发，另外基于主产品线再开出一个branch做另一个小众市场的试错项目，这项目由张无忌开发；那么问题来了，以后类似这样的项目会越来越多，程序员一人多用的现象已经中国这片土地上面成为常态，所以程序员们也必然会通过自身努力练就三头六臂的本领；所以张无忌现在会同时(犹如电脑CPU进程切换一样)负责3个项目；那么比如张无忌正在开发A项目，然后B项目突然反馈一个致命bug，必须立刻马上解决；后来这个bug发现C项目也有；那么张无忌是不是先把正在开发的A项目的代码提交(不能提交到远程代码仓库，因为开发的A项目代码还是半成品)，然后去修改B项目的致命bug；这时如果用的svn的话，具体咋搞？这里我就不具体说了，反正我觉得张无忌会哭！那么用git就非常爽啦，针对项目A分支进行add、commit就行了；然后checkout B，切换到B项目分支上改bug就行了，改完后合并到C项目上就行啦！你说爽不爽，这就是中央仓库和“分布式”仓库的巨大差别！看到其它同事茫然的点点头，我心中窃喜！&lt;/p&gt;
&lt;p&gt;扯的有点远了，回到正题上来！git不就是个版本管理工具嘛，有什么了不起的，先自己随便搞搞；用一段话描述项目的需求如下：在本地新建一个git代码仓库，然后添加一个分支develop，在分支develop中添加一个文件，然后再添加一个分支master，将develop分支中的文件合并到master分支中，然后同时修改develop分支中的文件和master分支中的文件并合并，遇到冲突后解决冲突，就这么多。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、新建本地仓库（git init）&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git init&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Initialized empty Git repository in D:/workspace/gitDemo/.git/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;提示初始化一个空的git仓库在XXXX目录中&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、新建develop分支（git branch develop）&lt;/strong&gt;&lt;br&gt;&lt;em&gt;- 先检查刚才新建的本地空仓库中是否有分支（git branch）;明显没有嘛，这还用想？不试试怎么知道，好吧就试试吧！&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git branch&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输入命令后什么都没有输出，表名该仓库还没有任何分支；当然git branch命令会列出本地仓库的所有分支，并会标示出当前所在的分支。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;- 新建develop分支操作（git branch develop）&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git branch develop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;fatal: Not a valid object name: &lt;span class=&quot;string&quot;&gt;&#39;master&#39;&lt;/span&gt;.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我去，直接给我亮出了红牌的致命警告，真是道路曲折啊，没法儿玩儿了；出现上面的提示是因为根据git约定要求，在空仓库中新建分支之前，需要commit一一下，好吧！那照做呗….&lt;/p&gt;
&lt;p&gt;&lt;em&gt;- 提交一下（git commit）&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git commit -m &lt;span class=&quot;string&quot;&gt;&quot;按照git要求，执行一次空的提交操作&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;On branch master&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Initial commit&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;nothing to commit&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;哎呀我去，我只是提交了一下啊，它怎么做了这么多事情(三行英文的意思就是 当前分支在master上面、初始化提交、提交的内容为空)；后两句我可以理解，那么当前分支为master这句话我有点理解不了。&lt;/p&gt;
&lt;p&gt;出现上面的提示(On branch master)是因为git仓库默认初始分支是master；而你直接在空的仓库中提交时，会坚持当前仓库是否有master分支，如果没有，则新建master分支，好吧，我只能说它太“人性化了”。那么其实到这里我们已经通过commit操作创建了git默认的master分支了。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;- 看看刚才git自动为我新建的master分支真的创建完了吗&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git branch&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;哎呀，我去，怎么还显示空啊，难道创建失败了？好吧，在告诉你一个秘密：其实master分支已经自动创建完成了，只是不显示而已，你需要添加（add）一个物理文件进去，然后提交(commit)就可以看到master分支了。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ echo &lt;span class=&quot;string&quot;&gt;&quot;hello maps&quot;&lt;/span&gt; &amp;gt;index.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git commit -m &lt;span class=&quot;string&quot;&gt;&quot;commit index.txt file&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[master (root-commit) be4ae99] commit index.txt file&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; file changed, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; insertion(+)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	create mode &lt;span class=&quot;number&quot;&gt;100644&lt;/span&gt; index.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git branch&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过上面三步(添加一个物理文件、add到git的index库中、commit到git的本地仓库中)之后，我们可以看到master分支已经显示出来了！针对不易啊！&lt;br&gt;&lt;em&gt;注：其实上上步骤(上一步的上一步)中我们描述的执行一次空的提交(commit)是多余的；完全用上面三步走战略就行啦！&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;通过第二大步的操作后，我们本来新建develop分支的，结构却不由自主的“被创建一个master分支”。现状的状况就是我们在空的仓库中新建了一个master分支，然后在master分支中新建了一个index.txt文件。下面只能操作第三步，再次新建我们的develop分支喽。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;三、再次新建develop分支（git branch develop）&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git branch develop&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行完新建develop命令后，我们查看develop命令是否新建完成了（怎么现在对git branch这个命令越来越怀疑了，不会它又自动为我新建一个其它的分支吧，哈哈。眼见为实，操作看看吧）&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git branch&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	develop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;看到了吧，我们新建的develop分支已经出来了，但是奇怪的是我们上一步新建的master分支前面为什么一个”&lt;em&gt;“呢，其实这个”&lt;/em&gt;“代表当前所在的分支；上面的意思就目前仓库中有两个分支(develop、master)；而你当前所在的分支是master中。&lt;em&gt;那么到目前为止，现在的状况就是在本地代码仓库中，有一个master分支和一个develop分支，而master分支中有一个index.txt文件，而develop中没有任何文件。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;四、把master分支中的文件合并到develop中&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如标题一样，我们的目的是把master分支中的文件合并到develop中去，但是我们还不能直接用合并命令，还需要按照步骤执行如下操作：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1、切换到develop分支中(为啥这么做呢，git的合并规则是这样，比如我要把master分支合并到develop分支中，那么我就需要先切换到develop分支中，然后执行合并命令)&lt;/p&gt;
&lt;p&gt;   先切换到develop分支中&lt;br&gt;    &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git checkout develop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Switched to branch &lt;span class=&quot;string&quot;&gt;&#39;develop&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;   切换完成后，看看我们当前所处的分支是否是develop分支（看到没，develop前面一个“*”，代表当前所在分支是develop）&lt;br&gt;    &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git branch&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * develop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;2、执行合并分支的命令(&lt;em&gt;所以git合并命令git merge master的真正意思就是把master分支合并到我所在的当前分支develop中&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;   然后执行合并master分支到develop分支中的操作(执行完成后，我们就可以到develop分支下面看到合并过来的index.txt文件了)&lt;br&gt;    &lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git merge master&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Already up-to-date.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;五、修改合并到develop分支中的文件内容为hello develop，并提交&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们因为执行了上一步的合并master分支到develop分支的操作，所以我们当前所在分支是develop；那么我们修改该分支下面的index.txt文件内容为：hello develop&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;原内容：hello maps&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;新内容：hello develop&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后执行添加(add)和提交(commit)操作.&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git add index.txt&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git commit -m &lt;span class=&quot;string&quot;&gt;&quot;修改index文件为hello develop&quot;&lt;/span&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[develop bf5d39d] 修改index文件为hello develop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; file changed, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; insertion(+), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; deletion(-)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;六、切换到master分支,并修改文件内容为hello master&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;   切换到master分支&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git checkout master&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Switched to branch &lt;span class=&quot;string&quot;&gt;&#39;master&#39;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;   修改文件内容(因为上一步修改的是develop分支中的index文件，那么我们切换到master分支后，其中的index.txt文件是不会发生改变的，所以内容依然是hello maps)&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;原内容：hello maps&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;新内容：hello master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;七、小述一下&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;到目前为止，我们修改了develop分支中的内容为：hello develop；而修改master分支中的内容为：hello master；并且当前所在分支是master分支，那么接下来我们需要合并develop分支中的文件到当前所在分支master中来。因为两个分支中的文件都发生了更改，所以合并时肯定会报冲突，至于冲突下面解决。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;八、合并develop分支的内容到master分支中&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先检查一下当前所在分支是否是master中（看到了吧 ，master分支前面一个“*”号，代表当前所在分支是master上面）&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git branch&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	develop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;合并develop分支中的内容到master分支上面（我们执行合并命令后git merge develop之后提示了4行信息）&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git merge develop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Auto-merging index.&lt;span class=&quot;function&quot;&gt;txt&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;title&quot;&gt;CONFLICT&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(content)&lt;/span&gt;: Merge conflict in index.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Automatic merge failed; fix conflicts and then commit the result.&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上面的提示证明此次合并失败，以为两个文件中的内容合并过程中冲突了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用git diff命令查看两个文件冲突的内容&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git diff&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;diff --cc index.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;index &lt;span class=&quot;number&quot;&gt;2e6&lt;/span&gt;baf7,&lt;span class=&quot;number&quot;&gt;246&lt;/span&gt;b739..&lt;span class=&quot;number&quot;&gt;0000000&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--- a/index.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;+++ b/index.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;@@@ -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; +&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; @@@&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- hello master&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; -hello develop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;++&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;++hello master&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;++=======&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;++hello develop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;++&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; develop&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;我们也可以到当前分支master中直接打开index.txt文件查看，或者用cat命令查看也可以&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cat index.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hello master&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;=======&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hello develop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; develop&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;九、冲突解决–手工&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我们执行合并操作后，因为两个分支分别对同一个文件进行了修改，所以合并的时候就报冲突了(其实合并执行后，git把文件中凡是冲突的地方都写到当前分支的文件中了，只不过用特殊标记标注了而已)下面是合并冲突后的index.txt文件内容&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ cat index.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hello master&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;=======&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;hello develop&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; develop&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;针对上面的文件，我们先看&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;（7个&amp;lt;） 到 =======（7个=）之间的内容为：hello master；这就是当前所在分支master&lt;br&gt;分支下面index.txt的文件内容(一般是我修改的)；再接着看从=======（7个=） 到 &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;（7个&amp;gt;）之间的内容为：hello develop；这就是develop分支下面index.txt的文件内容(一般是别人修改的)。&lt;/p&gt;
&lt;p&gt;所以我们现在要做的就是解决冲突，具体怎么解决冲突，有以下处理办法：&lt;/p&gt;
&lt;p&gt; 1、把develop分支中的内容覆盖(擦除)掉master分支中的内容(就好比develop战胜)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;文件最终内容为：hello develop
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt; 2、把master分支中的内容覆盖(擦除)掉develop分支中的内容(就好比master战胜)&lt;/p&gt;
&lt;p&gt;   文件最终内容为：hello master&lt;/p&gt;
&lt;p&gt; 3、把master分支中的内容与develop分支中的内容都保留(就好比develop分支和master分支和解)&lt;/p&gt;
&lt;p&gt;   文件最终内容为：hello master hello develop&lt;/p&gt;
&lt;p&gt;不管最终我们以何种方式解决冲突(以谁的内容为主),最终我们都需要删除index.txt文件中的其他无用的git冲突标示符(“+”、”&amp;lt;”、”=”、”&amp;gt;”)；然后我们执行添加(add)和提交(commit)操作,具体不在详述了，前面有说到！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;十、冲突解决–工具&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第九步中，我们已经通过手工方式解决了冲突，但是如果一个文件中有N多地方的内容都冲突，那么我们通过手工解决非常费劲，并且容易出错，所以借助工具(mergetool)解决这些体力活是明智之举。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git mergetool&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;This message is displayed because &lt;span class=&quot;string&quot;&gt;&#39;merge.tool&#39;&lt;/span&gt; is not configured.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;See &lt;span class=&quot;string&quot;&gt;&#39;git mergetool --tool-help&#39;&lt;/span&gt; or &lt;span class=&quot;string&quot;&gt;&#39;git help config&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; more details.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&#39;git mergetool&#39;&lt;/span&gt; will now attempt to use one of the following tools:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;opendiff kdiff3 tkdiff xxdiff meld tortoisemerge gvimdiff diffuse diffmerge ecmerge p4merge araxis bc codecompare emerge vimdiff&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Merging:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;index.txt&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Normal merge conflict &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;index.txt&#39;&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;local&amp;#125;: modified file&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#123;remote&amp;#125;: &lt;span class=&quot;function&quot;&gt;modified file&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Hit return to start merge resolution &lt;span class=&quot;title&quot;&gt;tool&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(tortoisemerge)&lt;/span&gt;:&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输入“git mergetool”命令后，直接再按一次回车键就会弹出合并工具的界面：&lt;br&gt;&lt;img src=&quot;http://soujava.com/images/gitmerge1.png&quot; alt=&quot;Alt text&quot; title=&quot;git 合并工具&quot;&gt;&lt;/p&gt;
&lt;p&gt;你可以右键点击冲突的行内容，然后点击弹出的菜单项进行合并操作，然后可以看工具的下面区域实时显示合并后的内容效果。&lt;/p&gt;
&lt;p&gt;通过工具合并后，我们仍然需要直接添加(add)和提交(commit)操作。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;用了git有一段时间了，在项目团队刚切入git时还是遇到了不少的阻力，各种质疑，为什么svn用的好好的突然转到git上面？为什么git操作这么复杂？等等等等；当然我作为逗比的我还是很愿意为他们一一诉说我对git的真爱的。当然并不是说svn不好，我可以说svn非常好，尤其某些
    
    </summary>
    
      <category term="git" scheme="http://www.soujava.com/categories/git/"/>
    
    
      <category term="git" scheme="http://www.soujava.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>java使用jxl读取excel数据时特殊符号处理</title>
    <link href="http://www.soujava.com/java%E4%BD%BF%E7%94%A8jxl%E8%AF%BB%E5%8F%96excel%E6%95%B0%E6%8D%AE%E6%97%B6%E7%89%B9%E6%AE%8A%E7%AC%A6%E5%8F%B7%E5%A4%84%E7%90%86/"/>
    <id>http://www.soujava.com/java使用jxl读取excel数据时特殊符号处理/</id>
    <published>2016-08-17T03:40:01.000Z</published>
    <updated>2016-08-17T03:41:28.778Z</updated>
    
    <content type="html">&lt;p&gt;使用JXL读取Excel中数据时，如果Excel中的单元格中有M1.5×6这样的值时，读取数据时，不能识别×，或者为乱码（？）。&lt;br&gt; 未处理之前代码：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;   Workbook modelBook = Workbook.getWorkbook(input);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Sheet sheet = modelBook.getSheet(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;处理之后的代码：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;   WorkbookSettings setting = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WorkbookSettings();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Locale locale = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; Locale(&lt;span class=&quot;string&quot;&gt;&quot;zh&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;CN&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;setting.setLocale(locale);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;setting.setEncoding(&lt;span class=&quot;string&quot;&gt;&quot;ISO-8859-1&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Workbook modelBook = Workbook.getWorkbook(input,setting);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注：处理之后的代码片段中前4行代码段，用来解决乱码问题！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用JXL读取Excel中数据时，如果Excel中的单元格中有M1.5×6这样的值时，读取数据时，不能识别×，或者为乱码（？）。&lt;br&gt; 未处理之前代码：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gut
    
    </summary>
    
      <category term="java" scheme="http://www.soujava.com/categories/java/"/>
    
    
      <category term="jxl" scheme="http://www.soujava.com/tags/jxl/"/>
    
  </entry>
  
  <entry>
    <title>Linux查看端口占用</title>
    <link href="http://www.soujava.com/Linux%E6%9F%A5%E7%9C%8B%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/"/>
    <id>http://www.soujava.com/Linux查看端口占用/</id>
    <published>2016-08-17T03:30:49.000Z</published>
    <updated>2016-08-17T07:39:55.186Z</updated>
    
    <content type="html">&lt;p&gt;在操作linux服务器的时候经常会碰到端口被占用的情况，那么如果更好的找到某个端口被什么占用呢。&lt;/p&gt;
&lt;p&gt;一、分布操作&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先使用下面命令，查看当前环境的所有进程&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;netstat  -apn&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后看某一个端口，后面对应的PID，然后通过kill  PID,把该端口停止&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;kill -9 pid号&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、快捷操作&lt;/p&gt;
&lt;p&gt; 使用如下命令查看对应的端口是否被占用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;netstat  -apn | grep  protNO
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;例如：netstat -apn | grep 8080  查看8080端口是否被占用，如果没占用，则显示被占用的进程；如果未被占用，则什么也不会输出。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在操作linux服务器的时候经常会碰到端口被占用的情况，那么如果更好的找到某个端口被什么占用呢。&lt;/p&gt;
&lt;p&gt;一、分布操作&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先使用下面命令，查看当前环境的所有进程&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;netstat  -apn&lt;/p&gt;

    
    </summary>
    
      <category term="Linux" scheme="http://www.soujava.com/categories/Linux/"/>
    
    
      <category term="网卡" scheme="http://www.soujava.com/tags/%E7%BD%91%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat实时查看日志信息</title>
    <link href="http://www.soujava.com/Tomcat%E5%AE%9E%E6%97%B6%E6%9F%A5%E7%9C%8B%E6%97%A5%E5%BF%97%E4%BF%A1%E6%81%AF/"/>
    <id>http://www.soujava.com/Tomcat实时查看日志信息/</id>
    <published>2016-08-17T03:27:50.000Z</published>
    <updated>2016-08-17T03:30:00.628Z</updated>
    
    <content type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先切换到tomcat的安装目录logs/文件夹下面（tomcat/logs/）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd  tomcat/logs/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行如下命令就可以实时查看tomcat的运行日志信息了&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tail -f catalina.out&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;先切换到tomcat的安装目录logs/文件夹下面（tomcat/logs/）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd  tomcat/logs/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;运行如下命令就可以实时查看tomcat的
    
    </summary>
    
      <category term="Tomcat" scheme="http://www.soujava.com/categories/Tomcat/"/>
    
    
      <category term="Tomcat日志" scheme="http://www.soujava.com/tags/Tomcat%E6%97%A5%E5%BF%97/"/>
    
  </entry>
  
  <entry>
    <title>Linux双网卡配置(内外网同时访问)</title>
    <link href="http://www.soujava.com/Linux%E5%8F%8C%E7%BD%91%E5%8D%A1%E9%85%8D%E7%BD%AE-%E5%86%85%E5%A4%96%E7%BD%91%E5%90%8C%E6%97%B6%E8%AE%BF%E9%97%AE/"/>
    <id>http://www.soujava.com/Linux双网卡配置-内外网同时访问/</id>
    <published>2016-08-17T02:28:50.000Z</published>
    <updated>2016-08-19T06:09:49.268Z</updated>
    
    <content type="html">&lt;p&gt;事情的经过是这样的。。。。。；我有一台linux服务器操作系统，只能内网访问，现在需要提供给公司其他地域的同事通过VPN可以访问操作，那么就需要为这个linux操作系统配置一个新配置一个网卡，你修改网卡配置文件之前需要确保你的linux操作系统已经有两块物理网卡了，也就是说当你进入linux操作系统后，运行ifconfig命令可以看到eth0和eth1两个网卡信息，这才代表你的物理环境没有问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere11.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、Ubuntu篇&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、进入/etc/network目录中，编辑interfaces文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/linuxInter0.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2、配置eth1网卡的信息(ip地址，网关、子网掩码、DNS)信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/linuxInter1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;3、配置完相关信息后，需要编辑路由配置文件，配置域名服务器(这里配置完成后，永久生效)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;vim /etc/resolvconf/resolv.conf.d/base
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/linuxInter2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;4、配置完网卡信息后，我们还不能连通外网，因为我们系统的路由默认采用内网网关进行通信的，我们需要把外网的网关设置成默认路由。先运行route命令查看路由信息，可以看到default 为eth0；即默认为内网网关。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/linuxInter4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;5、把外网网关地址添加为默认路由，同时删除内网网关的路由&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;route add default  gw 192.168.1.1

&amp;gt;route del default  gw 192.168.0.253
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;6、路由配置完成后，运行route命令我们可以看到default变成了eth1&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/linuxInter3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;7、重启网络服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;/etc/init.d/networking restart
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;8、总结：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看物理环境十分正常，也就是通过ifconfig命令是否显示两块网卡设备&lt;/li&gt;
&lt;li&gt;配置eth1网卡配置文件&lt;/li&gt;
&lt;li&gt;添加外网dns地址&lt;/li&gt;
&lt;li&gt;设置外网网关为默认路由&lt;/li&gt;
&lt;li&gt;重启网络服务&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：我之前一直在/etc/resolv.conf中添加dns信息，后来才明白这个是临时文件，当在/etc/resolvconf/resolv.conf.d/base文件中配置完成后，/etc/resolv.conf中信息会自动生成的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一、Cent0S篇&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、同样检查一下系统物理环境是否正常，通过ifconfig命令查看是否存在除eth0网卡设备外，还有其他网卡eth*;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere11.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2、进入/etc/sysconfig/network-scripts/目录下面，我们可以看到有两个网卡设备的配置文件：ifcfg-eth0、ifcfg-eth1。&lt;/p&gt;
&lt;p&gt;3、将ifcfg-eth0配置文件复制一份并改名为ifcfg-eth1。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;cp ifcfg-eth0 ifcfg-eth1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;4、修改ifcfg-eth1配置文件,具体信息如下&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;DEVICE=eth1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;TYPE=Ethernet&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;NOBOOT=yes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;NM_CONTROLLED=yes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;BOOTPROTO=none&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IPADDR=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.*.*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PREFIX=&lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;GATEWAY=&lt;span class=&quot;number&quot;&gt;192.168&lt;/span&gt;.*.*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;DEFROUTE=yes	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IPV4_FAILURE_FATAL=yes&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IPV6INIT=no&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;NAME=&lt;span class=&quot;string&quot;&gt;&quot;System eth1&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;DNS1=*.*.*.*&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;HWADDR=你的虚拟机的网卡设备的mac地址&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LAST_CONNECT=&lt;span class=&quot;number&quot;&gt;1465192940&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;USERCTL=no&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5、重启网络服务(下面两条命令都可以)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; service network restart
&amp;gt; /etc/init.d/network restart
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;事情的经过是这样的。。。。。；我有一台linux服务器操作系统，只能内网访问，现在需要提供给公司其他地域的同事通过VPN可以访问操作，那么就需要为这个linux操作系统配置一个新配置一个网卡，你修改网卡配置文件之前需要确保你的linux操作系统已经有两块物理网卡了，也就是说
    
    </summary>
    
      <category term="Linux" scheme="http://www.soujava.com/categories/Linux/"/>
    
    
      <category term="网卡" scheme="http://www.soujava.com/tags/%E7%BD%91%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>VMwarevSphere添加物理网卡后其中的虚拟机使用该网卡配置</title>
    <link href="http://www.soujava.com/VMwarevSphere%E6%B7%BB%E5%8A%A0%E7%89%A9%E7%90%86%E7%BD%91%E5%8D%A1%E5%90%8E%E5%85%B6%E4%B8%AD%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BD%BF%E7%94%A8%E8%AF%A5%E7%BD%91%E5%8D%A1%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.soujava.com/VMwarevSphere添加物理网卡后其中的虚拟机使用该网卡配置/</id>
    <published>2016-08-17T01:27:45.000Z</published>
    <updated>2016-08-17T03:18:59.997Z</updated>
    
    <content type="html">&lt;p&gt;一、有一台机架服务器，使用VMwarevSphere进行虚拟化，然后在其上安装N台虚拟机以供不同业务需要，之前该VMwarevSphere只有一个内网的物理网卡，也就是只能内网访问和使用；现在有个需求需要把该VMwarevSphere开放外网功能，并满足其他地域的用户通过公司VPN可以正常使用上面的虚拟机(其中的某一台)。所以现在需要三步操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;买一个物理网卡插到机架服务器的卡槽上面(哈哈，这一步不用说了，我去趟WC)&lt;/li&gt;
&lt;li&gt;VMwarevSphereClientk连VMwarevSphere服务器配置网卡&lt;/li&gt;
&lt;li&gt;进入到VMwarevSphere中的某一台虚拟机进行网卡配置&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;二、VMwarevSphereClientk连VMwarevSphere服务器配置网卡&lt;/p&gt;
&lt;p&gt;1、 插入外网物理网卡之后，我们通过VMwarevSphereClientk连VMwarevSphere服务器后，在“配置”-“网络适配器”中就可以看到刚才新接入的网卡了(如果看不到，则说明你的网卡有问题啊，具体什么问题需要物理解决)，下面的图片中我们可以看到有两个可用的网卡(最下面两个vmnic0、vmnic1，其实vmnic1是我新接入的网卡)，其他的都不可用，仅仅代表支持多少个网卡&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere0.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;2、 虽然我们已经接入了物理网卡，但是我们现在系统的网络环境还没有装载进来，我们需要把该网卡添加到网络环境中来；进入“配置”–“网络”，在右侧界面中右上角点击“添加网络”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;3、开始进入到添加网络的界面，其实只需要下一步下一步的进行就可以了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;4、 选择网卡的网络类型&lt;/p&gt;
&lt;p&gt;注：创建交换机那一项，选择网卡时不要被图片中我的选择内容干扰了，选择哪个网卡根据你的实际情况，参照第一幅图片中(你找到你新插入的物理网卡的代号vmnic0~vmnicN)；比如你新接入的网卡是那个你就选择哪个。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;5、设置网卡的链接方式&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;6、完成配置&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;7、然后再次进入“配置”–“网络”界面中，我们可以看到我们新添加的网卡&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere00.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;8、 然后我们对这个网卡进行编辑操作(添加虚拟机端口)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere01.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere02.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;9、 这里跟上一个步骤差不多，只不过这里的连接类型需要选择“vmKernel”&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere03.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere04.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;10、 配置我们的ip地址(一般是配置你的外网ip地址，因为你既然让他开放到外网，所以你肯定有可能需要在外网通过vmSphereClient进行远程管理吧，这里就是配置你的外网访问ip地址)，到这里我们的物理机和网卡的配置就算完成了，下面需要配置的就是我们需要提供给外网用户访问的虚拟机了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere05.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere06.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;11、 选择我们需要提供给外网用户访问的虚“虚拟机”，开始配置网络&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere6.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;12、 为虚拟机添加网卡(我们虚拟机要想链接外网，肯定要使用物理服务器的外网网卡，所以我们需要把物理服务器新接入的网卡添加到虚拟机上面)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;13、 选择网络类型(其实这里又是跟前面的网络配置差不多，多么熟悉的界面)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere8.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere9.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;14、 然后添加完成后，我们可以看到我们新加入的网络适配器2，这里需要记住右侧的MAC地址，后面的配置网卡配置文件时要用到&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere10.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;15、重启一下系统，然后我们进入到需要供外网访问的那台虚拟机中，输入ifconfig命令就可以看到我们为虚拟机添加的网卡了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/vSphere11.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;16、当然上一步中看到eth1这个新的网卡还不行，需要为这个网卡配置具体的ip，因为我们既然需要把这台虚拟机提供给外面用户访问，那么ip地址肯定不能老变化，所以我们需要为这个网卡eth1配置相关信息，具体怎么配置可以参考另一篇文章“&lt;a href=&quot;http://soujava.com/Linux%E5%8F%8C%E7%BD%91%E5%8D%A1%E9%85%8D%E7%BD%AE-%E5%86%85%E5%A4%96%E7%BD%91%E5%90%8C%E6%97%B6%E8%AE%BF%E9%97%AE/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux双网卡配置(内外网同时访问)&lt;/a&gt;”&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一、有一台机架服务器，使用VMwarevSphere进行虚拟化，然后在其上安装N台虚拟机以供不同业务需要，之前该VMwarevSphere只有一个内网的物理网卡，也就是只能内网访问和使用；现在有个需求需要把该VMwarevSphere开放外网功能，并满足其他地域的用户通过公
    
    </summary>
    
      <category term="vSphere" scheme="http://www.soujava.com/categories/vSphere/"/>
    
    
      <category term="vSphere添加物理网卡" scheme="http://www.soujava.com/tags/vSphere%E6%B7%BB%E5%8A%A0%E7%89%A9%E7%90%86%E7%BD%91%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>thymeleaf教程1-环境搭建</title>
    <link href="http://www.soujava.com/thymeleaf%E6%95%99%E7%A8%8B1-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://www.soujava.com/thymeleaf教程1-环境搭建/</id>
    <published>2016-08-08T07:16:41.000Z</published>
    <updated>2016-08-09T06:08:53.313Z</updated>
    
    <content type="html">&lt;p&gt;一、由于springboot这一强大的框架的发布，更由于其采用thymeleaf作为其官方的推荐模板引擎，所以决定学习一下thymeleaf这个模板引擎，当然是通过springboot才了解到的thymeleaf；所以试用也是基于springboot来进行；而springboot采用gradle工具依赖管理，所以要想使用thymeleaf，必须进行如下操作：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在你的springboot项目工程中添加thymeleaf的依赖配置&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;compile(&lt;span class=&quot;string&quot;&gt;&quot;org.springframework.boot:spring-boot-starter-thymeleaf:1.3.3.RELEASE&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;编写一个测试页面(html),对thymeleaf进行使用&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     xmlns:layout=&quot;http://www.ultraq.net.nz/web/thymeleaf/layout&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;head&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/head&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;body&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	hello thymeleaf!&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/body&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;我们可以看到这就是一个普普通通的html模板页面，唯一不同的地方就是在&lt;html&gt;标签中添加了一些配置；这就是thymeleaf的标签；这里配置完以后，在下面我们就可以用&lt;strong&gt;&amp;lt;th:XX &lt;/strong&gt;这样的标签把数据渲染到html模板中了；&lt;/html&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于该html是模板页面，所以我们不能在浏览器中直接打开浏览thymeleaf渲染数据的效果，需要借助于类似tomcat的web服务器浏览才行！如果仍然直接在浏览器中浏览的话，那么我们看到的效果是&amp;lt;th:XX 标签被忽略的效果！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;二、暂且抛弃springboot，仅仅采用原生态的方式试用thymeleaf，即除了thymeleaf，其它都不包含&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;eclipse新建maven工程&lt;br&gt; &lt;img src=&quot;http://soujava.com/images/newmavenproject.png&quot; alt=&quot;&quot;&gt;&lt;br&gt; &lt;img src=&quot;http://soujava.com/images/newmaven1.png&quot; alt=&quot;&quot;&gt;&lt;br&gt; &lt;img src=&quot;http://soujava.com/images/newmaven2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt; &lt;img src=&quot;http://soujava.com/images/newmaven3.png&quot; alt=&quot;&quot;&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在pom.xml配置对Thymeleaf的依赖&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;90&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;91&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;92&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;93&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;94&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;95&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;96&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;97&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;98&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;99&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;100&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;101&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;102&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;103&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;104&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;105&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;106&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;107&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;108&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;109&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;110&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;111&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;112&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;113&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;114&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;115&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;116&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;117&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;118&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;120&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;121&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;123&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;125&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;groupId&amp;gt;com.maps&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;artifactId&amp;gt;theymeleaf&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;packaging&amp;gt;war&amp;lt;/packaging&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;version&amp;gt;0.0.1-SNAPSHOT&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;name&amp;gt;theymeleaf Maven Webapp&amp;lt;/name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;url&amp;gt;http://maven.apache.org&amp;lt;/url&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;repositories&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;repository&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;id&amp;gt;sonatype-nexus-snapshots&amp;lt;/id&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;name&amp;gt;Sonatype Nexus Snapshots&amp;lt;/name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;url&amp;gt;https://oss.sonatype.org/content/repositories/snapshots&amp;lt;/url&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;snapshots&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;enabled&amp;gt;true&amp;lt;/enabled&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/snapshots&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/repository&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/repositories&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;dependencies&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;version&amp;gt;3.8.1&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;groupId&amp;gt;org.thymeleaf&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;artifactId&amp;gt;thymeleaf&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;version&amp;gt;3.0.1.RELEASE&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;groupId&amp;gt;javax.servlet&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;artifactId&amp;gt;javax.servlet-api&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;version&amp;gt;3.1.0&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;scope&amp;gt;provided&amp;lt;/scope&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;artifactId&amp;gt;slf4j-api&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;version&amp;gt;1.6.1&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;artifactId&amp;gt;slf4j-log4j12&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;version&amp;gt;1.6.1&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;groupId&amp;gt;log4j&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;artifactId&amp;gt;log4j&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;version&amp;gt;1.2.15&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;scope&amp;gt;compile&amp;lt;/scope&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;exclusions&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;exclusion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;groupId&amp;gt;com.sun.jdmk&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;artifactId&amp;gt;jmxtools&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;/exclusion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;exclusion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;groupId&amp;gt;com.sun.jmx&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;artifactId&amp;gt;jmxri&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;/exclusion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;exclusion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;groupId&amp;gt;javax.jms&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;artifactId&amp;gt;jms&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;/exclusion&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/exclusions&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/dependency&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;/dependencies&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;build&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;resources&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;resource&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;directory&amp;gt;src/main/resources&amp;lt;/directory&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/resource&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;resource&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;directory&amp;gt;src/main/java&amp;lt;/directory&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;includes&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;include&amp;gt;**/*.properties&amp;lt;/include&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;include&amp;gt;**/*.xml&amp;lt;/include&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;include&amp;gt;**/*.html&amp;lt;/include&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;/includes&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/resource&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/resources&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;plugins&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;plugin&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;artifactId&amp;gt;maven-compiler-plugin&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;version&amp;gt;3.2&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;configuration&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;source&amp;gt;1.5&amp;lt;/source&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;target&amp;gt;1.5&amp;lt;/target&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;/configuration&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/plugin&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;plugin&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;artifactId&amp;gt;maven-resources-plugin&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;version&amp;gt;2.7&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;configuration&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         &amp;lt;encoding&amp;gt;ISO-8859-1&amp;lt;/encoding&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;/configuration&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/plugin&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;plugin&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;groupId&amp;gt;org.apache.tomcat.maven&amp;lt;/groupId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;artifactId&amp;gt;tomcat7-maven-plugin&amp;lt;/artifactId&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;lt;version&amp;gt;2.2&amp;lt;/version&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &amp;lt;/plugin&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;lt;/plugins&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; 	&amp;lt;/build&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/project&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;中断一下，先讲解一下该demo的执行流程&lt;br&gt; &lt;img src=&quot;http://soujava.com/images/thymeleafFollow.png&quot; alt=&quot;模板引擎执行流程&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MyApplication–应用装载器&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; application;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.HashMap;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Map;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.ITemplateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.TemplateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.templatemode.TemplateMode;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.templateresolver.ServletContextTemplateResolver;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; controller.HomeController;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; controller.Controller;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyApplication&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   	 	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; TemplateEngine templateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   	 	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Map&amp;lt;String, Controller&amp;gt; controllersByURL;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyApplication&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ServletContext servletContext)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*1、实例化模板解析器，并配置相关选项*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        ServletContextTemplateResolver templateResolver = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServletContextTemplateResolver(servletContext);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*1.1、其实thymeleaf模板引擎的默认模式是HTML，在这里再次设置只是为了更好理解*/&lt;/span&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        templateResolver.setTemplateMode(TemplateMode.HTML);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*1.2、设置模板引擎的默认加载路径*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        templateResolver.setPrefix(&lt;span class=&quot;string&quot;&gt;&quot;/WEB-INF/templates/&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*1.3、设置模板引擎的文件后缀*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        templateResolver.setSuffix(&lt;span class=&quot;string&quot;&gt;&quot;.html&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*1.4、设置模板缓存时间为1小时，如果不设置，模板将一直在缓存中*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        templateResolver.setCacheTTLMs(Long.valueOf(&lt;span class=&quot;number&quot;&gt;3600000L&lt;/span&gt;));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*1.5、模板引擎的默认缓存是开启的，这里设置true是为了更好理解； 其实如果这里设置false的话，当你修改模板后，你就可以在浏览器中实时查看到修改后的模板内容*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        templateResolver.setCacheable(&lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*2、实例化模板引擎*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.templateEngine = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TemplateEngine();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*3、将模板解析器装载到模板引擎中*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.templateEngine.setTemplateResolver(templateResolver);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;comment&quot;&gt;/*4、针对不同的url实例化不同的业务控制器*/&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.controllersByURL = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;String, Controller&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.controllersByURL.put(&lt;span class=&quot;string&quot;&gt;&quot;/&quot;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; HomeController());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Controller &lt;span class=&quot;title&quot;&gt;resolveControllerForRequest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; HttpServletRequest request)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       	 	&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String path = getRequestPath(request);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.controllersByURL.get(path);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; ITemplateEngine &lt;span class=&quot;title&quot;&gt;getTemplateEngine&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.templateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getRequestPath&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; HttpServletRequest request)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        String requestURI = request.getRequestURI();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; String contextPath = request.getContextPath();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; fragmentIndex = requestURI.indexOf(&lt;span class=&quot;string&quot;&gt;&#39;;&#39;&lt;/span&gt;); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fragmentIndex != -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	            requestURI = requestURI.substring(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, fragmentIndex);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (requestURI.startsWith(contextPath)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; requestURI.substring(contextPath.length());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; requestURI;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Controller–控制器接口&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; controller;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletResponse;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.ITemplateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Controller&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           HttpServletRequest request, HttpServletResponse response,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           ServletContext servletContext, ITemplateEngine templateEngine)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;HomeController–首页控制器业务类,实现controller接口&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; controller;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Calendar;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletResponse;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.ITemplateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.context.WebContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HomeController&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Controller&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HomeController&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; HttpServletRequest request, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; HttpServletResponse response,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ServletContext servletContext, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ITemplateEngine templateEngine)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; Exception &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       WebContext ctx = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; WebContext(request, response, servletContext, request.getLocale());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       ctx.setVariable(&lt;span class=&quot;string&quot;&gt;&quot;today&quot;&lt;/span&gt;, Calendar.getInstance());&lt;span class=&quot;comment&quot;&gt;//thymeleaf的上下文中设置变量数据&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       templateEngine.process(&lt;span class=&quot;string&quot;&gt;&quot;home&quot;&lt;/span&gt;, ctx, response.getWriter());&lt;span class=&quot;comment&quot;&gt;//模板引擎转向到对应的模板页面&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  		&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;MyFilter–过滤器类&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;47&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;48&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;49&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;50&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;51&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;52&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;53&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;54&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;55&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;56&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;57&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;58&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;59&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;60&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;61&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;62&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;63&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;65&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;66&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;67&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;68&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;69&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;70&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;71&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;72&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;73&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;74&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;75&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;76&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;77&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;78&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;79&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;80&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;81&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;82&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;83&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;84&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;85&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;86&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;87&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;88&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;89&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; filter;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.Filter;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.FilterChain;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.FilterConfig;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletException;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletRequest;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.ServletResponse;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletRequest;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; javax.servlet.http.HttpServletResponse;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; org.thymeleaf.ITemplateEngine;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; application.MyApplication;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; controller.Controller;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; entity.User;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyFilter&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Filter&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; ServletContext servletContext;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; MyApplication application;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyFilter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	    &lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; FilterConfig filterConfig)&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ServletException &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.servletContext = filterConfig.getServletContext();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.application = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyApplication(&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.servletContext);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doFilter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ServletRequest request, &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; ServletResponse response,&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; FilterChain chain) &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; IOException, ServletException &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!process((HttpServletRequest)request, (HttpServletResponse)response)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            	chain.doFilter(request, response);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;destroy&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(HttpServletRequest request, HttpServletResponse response)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throws&lt;/span&gt; ServletException &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        	&lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            	&lt;span class=&quot;comment&quot;&gt;//针对资源请求url进行排除&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           	 &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (request.getRequestURI().startsWith(&lt;span class=&quot;string&quot;&gt;&quot;/css&quot;&lt;/span&gt;) ||&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    request.getRequestURI().startsWith(&lt;span class=&quot;string&quot;&gt;&quot;/images&quot;&lt;/span&gt;) ||&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    request.getRequestURI().startsWith(&lt;span class=&quot;string&quot;&gt;&quot;/favicon&quot;&lt;/span&gt;)) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;           	 &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             * 根据URL映射，获得处理该请求的控制器。&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            Controller controller = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.application.resolveControllerForRequest(request);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (controller == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             * 获取TemplateEngine(模板引擎)实例&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            ITemplateEngine templateEngine = &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.application.getTemplateEngine();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             * 写入响应头部信息&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            response.setContentType(&lt;span class=&quot;string&quot;&gt;&quot;text/html;charset=UTF-8&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            response.setHeader(&lt;span class=&quot;string&quot;&gt;&quot;Pragma&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;no-cache&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            response.setHeader(&lt;span class=&quot;string&quot;&gt;&quot;Cache-Control&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;no-cache&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            response.setDateHeader(&lt;span class=&quot;string&quot;&gt;&quot;Expires&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             * 执行控制器，并转向到对应的模板视图&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;             */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            controller.process(request, response, &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.servletContext, templateEngine);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       	 &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (Exception e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;catch&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;final&lt;/span&gt; IOException ignored) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ServletException(e);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;web.xml配置&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;	&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;lt;web-app id=&quot;gtvg&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         version=&quot;3.1&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;         xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;display-name&amp;gt;thymeleafexamples-gtvg&amp;lt;/display-name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;session-config&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;session-timeout&amp;gt;60&amp;lt;/session-timeout&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/session-config&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;filter-name&amp;gt;gtvgfilter&amp;lt;/filter-name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;filter-class&amp;gt;filter.MyFilter&amp;lt;/filter-class&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/filter&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;filter-mapping&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;filter-name&amp;gt;gtvgfilter&amp;lt;/filter-name&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;/filter-mapping&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/web-app&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在webapp/WEB-INF目录下面新建templates(模板目录)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;因为在MyApplication应用装载器中，我们在初始化模板引擎解析器时，设置了模板的目录选项。&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;/*1.2、设置模板引擎的默认加载路径*/
 templateResolver.setPrefix(&amp;quot;/WEB-INF/templates/&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;在templates目录下面新建home.html模板文件&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;head&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;title&amp;gt;Good Thymes Virtual Grocery&amp;lt;/title&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot; /&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;/head&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;body&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;lt;p&amp;gt;hello &amp;lt;span th:text=&quot;&#39;Thymeleaf&#39;&quot;&amp;gt;word!&amp;lt;/span&amp;gt;.&amp;lt;/p&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;lt;/body&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/html&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;在该模板页面中，我们可以看到使用了 th:text标签显示内容到p标签中&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;运行pom.xml编译构建完成后，启动tomcat服务器预览测试&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/thyemleafshow.png&quot; alt=&quot;显示页面&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;根据浏览效果我们可以看到th:text中的内容替换了p标签原有的内容word!&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;该demo已经上传至github上面，&lt;a href=&quot;https://github.com/mapingsheng/theymeleaf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/mapingsheng/theymeleaf&lt;/a&gt;&lt;/code&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一、由于springboot这一强大的框架的发布，更由于其采用thymeleaf作为其官方的推荐模板引擎，所以决定学习一下thymeleaf这个模板引擎，当然是通过springboot才了解到的thymeleaf；所以试用也是基于springboot来进行；而springb
    
    </summary>
    
      <category term="thymeleaf" scheme="http://www.soujava.com/categories/thymeleaf/"/>
    
    
      <category term="thymeleaf" scheme="http://www.soujava.com/tags/thymeleaf/"/>
    
  </entry>
  
  <entry>
    <title>如何查看当前的linux系统是哪个发行商</title>
    <link href="http://www.soujava.com/%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E7%9A%84linux%E7%B3%BB%E7%BB%9F%E6%98%AF%E5%93%AA%E4%B8%AA%E5%8F%91%E8%A1%8C%E5%95%86/"/>
    <id>http://www.soujava.com/如何查看当前的linux系统是哪个发行商/</id>
    <published>2016-08-03T08:06:33.000Z</published>
    <updated>2016-08-19T07:30:22.735Z</updated>
    
    <content type="html">&lt;p&gt;我们刚开始进入一个linux操作系统，可能只知道它是一个操作系统，但是不太清楚到底是那个发行商，比如ubuntu、Centos、Debian等等；那么当然老鸟通过查看某些目录的配置文件一眼就可以看到是什么发行商；对于新鸟来说有以下几个技巧可以查看：&lt;/p&gt;
&lt;p&gt;一、 通用方法-适用于当前市面上绝大多数linux&lt;/p&gt;
&lt;p&gt;  &lt;strong&gt;lsb_release -a&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[maps&lt;span class=&quot;meta&quot;&gt;@iZ&lt;/span&gt;25017n0ruZ conf]$ lsb_release -a&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;LSB Version:	:core-&lt;span class=&quot;number&quot;&gt;4.1&lt;/span&gt;-amd64:core-&lt;span class=&quot;number&quot;&gt;4.1&lt;/span&gt;-noarch&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Distributor ID:	CentOS&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Description:	CentOS Linux release &lt;span class=&quot;number&quot;&gt;7.0&lt;/span&gt;.1406 (Core) &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Release:	&lt;span class=&quot;number&quot;&gt;7.0&lt;/span&gt;.1406&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Codename:	Core&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输入以上命令后可以看到该linux操作系统是CentOs,版本是7.0.1406&lt;/p&gt;
&lt;p&gt;二、 非通用-技巧&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先通过cat /proc/version命令查看当前linux系统内核信息&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[maps@iZ25017n0ruZ etc]$ cat /proc/version &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Linux version 3.10.0-123.9.3.el7.x86_64 (builder@kbuilder.dev.centos.org) (gcc version 4.8.2 20140120 (Red Hat 4.8.2-16) (GCC) ) #1 SMP Thu Nov 6 15:06:03 UTC 2014&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过上面命令输出信息我们可以看到系统为Red Hat 4.8.2系列&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[maps@iZ25017n0ruZ etc]$ cat /proc/version &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Linux version 3.13.0-32-generic (buildd@kissel) (gcc version 4.8.2 (Ubuntu 4.8.2-19ubuntu1) ) #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过上面输出信息我们可以看到系统为Ubuntu系列&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;然后切换到/etc/目录下面，看看是否os.release文件，然后通过”cat os.release”命令查看该文件内容信息&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[**cat /etc/redhat-release**&lt;span class=&quot;meta&quot;&gt;@iZ&lt;/span&gt;25017n0ruZ etc]$ cat ./os-release &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;NAME=&lt;span class=&quot;string&quot;&gt;&quot;CentOS Linux&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;VERSION=&lt;span class=&quot;string&quot;&gt;&quot;7 (Core)&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ID=&lt;span class=&quot;string&quot;&gt;&quot;centos&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ID_LIKE=&lt;span class=&quot;string&quot;&gt;&quot;rhel fedora&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;VERSION_ID=&lt;span class=&quot;string&quot;&gt;&quot;7&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PRETTY_NAME=&lt;span class=&quot;string&quot;&gt;&quot;CentOS Linux 7 (Core)&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ANSI_COLOR=&lt;span class=&quot;string&quot;&gt;&quot;0;31&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CPE_NAME=&lt;span class=&quot;string&quot;&gt;&quot;cpe:/o:centos:centos:7&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;HOME_URL=&lt;span class=&quot;string&quot;&gt;&quot;https://www.centos.org/&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;BUG_REPORT_URL=&lt;span class=&quot;string&quot;&gt;&quot;https://bugs.centos.org/&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过上面的输出信息我们可以确定该系统为CentOs 7&lt;/p&gt;
&lt;p&gt;注：如果是redhat系列的linux系统，在/etc目录下面会有redhat-release文件，我们通过&lt;strong&gt;cat /etc/redhat-release&lt;/strong&gt;命令也可以查看系统发行商信息&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[maps&lt;span class=&quot;meta&quot;&gt;@iZ&lt;/span&gt;25017n0ruZ conf]$ cat /etc/redhat-release&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CentOS Linux release &lt;span class=&quot;number&quot;&gt;7.0&lt;/span&gt;.1406 (Core)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我们刚开始进入一个linux操作系统，可能只知道它是一个操作系统，但是不太清楚到底是那个发行商，比如ubuntu、Centos、Debian等等；那么当然老鸟通过查看某些目录的配置文件一眼就可以看到是什么发行商；对于新鸟来说有以下几个技巧可以查看：&lt;/p&gt;
&lt;p&gt;一、 通用
    
    </summary>
    
      <category term="Linux" scheme="http://www.soujava.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.soujava.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis动态传入tableName--非预编译(STATEMENT)</title>
    <link href="http://www.soujava.com/Mybatis%E5%8A%A8%E6%80%81%E4%BC%A0%E5%85%A5tableName-%E9%9D%9E%E9%A2%84%E7%BC%96%E8%AF%91-STATEMENT/"/>
    <id>http://www.soujava.com/Mybatis动态传入tableName-非预编译-STATEMENT/</id>
    <published>2016-07-28T11:12:02.000Z</published>
    <updated>2016-07-28T12:29:32.836Z</updated>
    
    <content type="html">&lt;p&gt;在使用Mybatis过程中，你可以体会到它的强大与灵活之处，由衷的为Mybatis之父点上999个赞！在使用过程中经常会遇到这样一种情况，我查询数据的时候，表名称是动态的从程序中传入的，比如我们通过mybatis的xml文件写sql查询时都是下面的样子：&lt;br&gt;&lt;strong&gt;1、正常的查询&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;select id=&quot;activityEnrollModelTableName&quot; parameterType=&quot;java.util.HashMap&quot; resultType=&quot;java.util.HashMap&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SELECT * FROM user WHERE userid = #&amp;#123;userid&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/select&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的查询语句用mybatis执行时,其实是自动的按照JDBC的预编译语句方式执行的，等同于下面一段JDBC代码的执行过程&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;com.mysql.jdbc.Driver&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Connection conn = DriverManage.getConnection(&lt;span class=&quot;string&quot;&gt;&quot;jdbc:mysql://localhost:3306/dbname&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;root&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;112233&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PreparedStatement preState = conn.prepareStatement(&lt;span class=&quot;string&quot;&gt;&quot;SELECT * FROM user WHERE userid = ?&quot;&lt;/span&gt;); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;preState.setString(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;96&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ResultSet result = preState.executeQuery();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(result.next())&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	result.getString(columnname);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	..........&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;到这里我们不禁疑惑，难道mybatis默认都是按照预编译语句的方式执行sql的吗？其实就是这样。通过查看mybatis官网文档可以看到有这么一个参数，statementType=[STATEMENT | PREPARED | CALLABLE ]；有三个可选值，mybatis默认值是PREPARED；&lt;br&gt;这个参数是什么作用呢：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设定mybatis执行sql的模式&lt;/li&gt;
&lt;li&gt;STATEMENT设定为非预编译语句模式&lt;/li&gt;
&lt;li&gt;PREPARED设定为预编译语句模式–mybatis默认&lt;/li&gt;
&lt;li&gt;CALLABLE设定为兼容模式，或者自适应模式，比如设置该值后，mybatis处理sql时会自动的处理根据#、$去判断处理，后面说一下#和$的区别。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;综上所述,mybatis默认按照预编译语句方式执行sql语句&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、动态传入表名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其实也经常会遇到动态的传入tableName的情况，也就是说上面的sql语句中的”user”是动态传入的，动态传入表名是mybatis中的一种特殊情况，&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;select id=&quot;activityEnrollModelTableName&quot; parameterType=&quot;java.util.HashMap&quot; resultType=&quot;java.util.HashMap&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SELECT * FROM #&amp;#123;user&amp;#125; WHERE userid = #&amp;#123;userid&amp;#125; //错误的写法&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/select&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;针对上面的语句，如果让mybatis仍然按照预编译语句方式执行时，等同于如下面的JDBC代码：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Class.forName(&lt;span class=&quot;string&quot;&gt;&quot;com.mysql.jdbc.Driver&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Connection conn = DriverManage.getConnection(&lt;span class=&quot;string&quot;&gt;&quot;jdbc:mysql://localhost:3306/dbname&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;root&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;112233&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;PreparedStatement preState = conn.prepareStatement(&lt;span class=&quot;string&quot;&gt;&quot;SELECT * FROM ? WHERE userid = ?&quot;&lt;/span&gt;); &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;preState.setString(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;USER&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;preState.setString(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;96&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ResultSet result = preState.executeQuery();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(result.next())&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	result.getString(columnname);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	..........&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们把该段JDBC代码通过java代码执行后，发现会报异常：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;java.sql.SQLException: ORA-&lt;span class=&quot;number&quot;&gt;00903&lt;/span&gt;: 表名无效&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所以可以说明预编译语句不能用于列名(查询的列名也不能用预编译语句)、表名；只能作用与where条件参数属性！既然JDBC就不能将预编译语句方式作用与表名上面，那么mybatis就同样也行不通(因为mybatis默认是预编译语句模式)。不过mybatis也早已考虑到了这种情况，所以为我们做了处理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;select标签语句中添加statementType=”STATEMENT”的属性配置&lt;/li&gt;
&lt;li&gt;标签内的sql语句中将所有的${}更换成为#{}，即将$还成#;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;select id=&quot;activityEnrollModelTableName&quot; statementType=&quot;STATEMENT&quot; parameterType=&quot;java.util.HashMap&quot; resultType=&quot;java.util.HashMap&quot;&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    SELECT * FROM $&amp;#123;user&amp;#125; WHERE userid = $&amp;#123;userid&amp;#125; //正确的写法&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;lt;/select&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面的语句标签中通过添加statementType=”STATEMENT”配置后，mybatis就不再使用预编译语句方式执行sql语句了，也就是通过直接执行sql语句操作；那么既然添加了statementType=”STATEMENT”非预编译配置后，为什么还需要把#换成$呢？其实是这样：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;“#” 是预编译语句模式下面的默认匹配符，也就是说mybatis遇到#{}时，将#{userid}替换成占位符?;被解析为一个JDBC预编译语句，然后再将#{userid}本身的值set进来。&lt;/li&gt;
&lt;li&gt;“$” 是非预编译语句下面的匹配符，非预编译语句说白了就是你传入什么sql语句，就执行什么sql语句，mybatis不做任何处理操作，但是这里mybatis会将${}对应的值，当做一个字符串处理，也就是说你程序接口方法中传递过来参数值是什么，对应的sql填充就是什么！&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在使用Mybatis过程中，你可以体会到它的强大与灵活之处，由衷的为Mybatis之父点上999个赞！在使用过程中经常会遇到这样一种情况，我查询数据的时候，表名称是动态的从程序中传入的，比如我们通过mybatis的xml文件写sql查询时都是下面的样子：&lt;br&gt;&lt;stron
    
    </summary>
    
      <category term="Mybatis" scheme="http://www.soujava.com/categories/Mybatis/"/>
    
    
      <category term="动态传入tableName" scheme="http://www.soujava.com/tags/%E5%8A%A8%E6%80%81%E4%BC%A0%E5%85%A5tableName/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统添加配置随开机启动的服务-rc.local配置</title>
    <link href="http://www.soujava.com/Linux%E7%B3%BB%E7%BB%9F%E6%B7%BB%E5%8A%A0%E9%85%8D%E7%BD%AE%E9%9A%8F%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E7%9A%84%E6%9C%8D%E5%8A%A1/"/>
    <id>http://www.soujava.com/Linux系统添加配置随开机启动的服务/</id>
    <published>2016-07-25T09:46:24.000Z</published>
    <updated>2016-08-17T07:40:27.513Z</updated>
    
    <content type="html">&lt;p&gt;在linux服务器操作系统中，经常会安装一些服务器端的软件如：tomcat、redis、MQ、Nginx等等常用的服务器组件；那么有时候服务器重启后需要用一个一个的启动命令把不同的软件启动起来；主要有以下几种场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;以root身份才能启动的服务&lt;/li&gt;
&lt;li&gt;以非root身份启动的服务(一般情况下都是以非root身份启动和管理服务)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;一、下面以把tomcat服务器配置成随开机自启动的配置为例说明一下&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;tomcat的安装路径：/usr/local/server/apache-tomcat-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么我们知道了tomcat的安装路径后，就可以通过以下命令启动tomcat服务了&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/usr/local/server/apache-tomcat-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;/bin/start.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果我们想让linux每次开机时自动启动tomcat服务，那么我们需要如下配置：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 /etc/rc.d/rc.local文件，在该配置文件中添加tomcat的启动命令&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;touch /var/lock/subsys/local&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/usr/local/server/apache-tomcat-&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;/bin/start.sh&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;二、下面以把redis服务配置成随开机自启动的配置为例说明一下（以redis用户启动）&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;redis的安装路径：/usr/local/cache/redis-&lt;span class=&quot;number&quot;&gt;2.8&lt;/span&gt;.19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果我们通过输入命令启动redis的方式是：(假设redis服务启动时必须用redis用户)&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/usr/local/cache/redis-&lt;span class=&quot;number&quot;&gt;2.8&lt;/span&gt;.19/src/redis-server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果我们想让linux每次开机时自动启动redis服务，那么我们需要如下配置：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打开 /etc/rc.d/rc.local文件，在该配置文件中添加tomcat的启动命令&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;touch /var/lock/subsys/local&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;su redis -c &lt;span class=&quot;string&quot;&gt;&quot;/usr/local/cache/redis-2.8.19/src/redis-server&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;三、总结&lt;/strong&gt;&lt;br&gt;我们主要通过在rc.local文件中添加我们服务的启动脚本的方式来配置随开机自启动服务；当然对于linux操作系统来讲，并不是仅仅就这一种方式配置随机启动操作，其他方式后续再说。那么rc.local到底是什么文件呢？&lt;/p&gt;
&lt;p&gt;rc.local其实是一个脚本文件，该脚本是在系统初始化级别脚本运行之后再执行的，因此可以在里面添加你想在系统启动之后执行的任何操作，比如启动第三方的服务，比如挂载mount操作等等。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在linux服务器操作系统中，经常会安装一些服务器端的软件如：tomcat、redis、MQ、Nginx等等常用的服务器组件；那么有时候服务器重启后需要用一个一个的启动命令把不同的软件启动起来；主要有以下几种场景：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;以root身份才能启动的服务&lt;/
    
    </summary>
    
      <category term="Linux" scheme="http://www.soujava.com/categories/Linux/"/>
    
    
      <category term="服务开机启动" scheme="http://www.soujava.com/tags/%E6%9C%8D%E5%8A%A1%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>Linux开机启动后经常需要配置网卡</title>
    <link href="http://www.soujava.com/Linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E5%90%8E%E7%BB%8F%E5%B8%B8%E9%9C%80%E8%A6%81%E9%85%8D%E7%BD%AE%E7%BD%91%E5%8D%A1/"/>
    <id>http://www.soujava.com/Linux开机启动后经常需要配置网卡/</id>
    <published>2016-07-25T09:27:42.000Z</published>
    <updated>2016-08-17T07:40:07.498Z</updated>
    
    <content type="html">&lt;p&gt;在虚拟机中安装的CentOS6操作系统，每次开机启动后，网卡默认都是关闭的；所以系统对外网络是处于中断的状态的，所以也就不能通过Xshell工具远程连接操作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/wangka.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后针对上面的情况，需要手动操作一下，把eth0网卡开启使用才行；感觉很繁琐！&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/wankapeizhi.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;解决方法：&lt;br&gt;使用如下命令编辑网卡信息：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;vim /etc/sysconfig/network-scripts/ifcfg-eth0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;网卡信息的内容大致如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;DEVICE=&amp;quot;eth0&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;TYPE=ethernet&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;UUID=1221231K-4DFSD-8SDFA&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ONBOOT=&amp;quot;yes&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;IPADDR=192.168.1.152&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;NETMASK=255.255.255.0&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;GATEWAY=192.168.1.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;BOOTPROTO=static&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在网卡信息中找到”NOBOOT=no”配置选项，改成”NOBOOT=yes”&lt;/p&gt;
&lt;p&gt;再重启电脑后就不需要再次手动配置激活网卡了！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在虚拟机中安装的CentOS6操作系统，每次开机启动后，网卡默认都是关闭的；所以系统对外网络是处于中断的状态的，所以也就不能通过Xshell工具远程连接操作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/wangka.jpg&quot; al
    
    </summary>
    
      <category term="Linux" scheme="http://www.soujava.com/categories/Linux/"/>
    
    
      <category term="网卡" scheme="http://www.soujava.com/tags/%E7%BD%91%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>通过Nginx反向代理解决跨域问题</title>
    <link href="http://www.soujava.com/%E9%80%9A%E8%BF%87%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
    <id>http://www.soujava.com/通过反向代理解决跨域问题/</id>
    <published>2016-07-19T09:26:32.000Z</published>
    <updated>2016-07-25T09:45:28.236Z</updated>
    
    <content type="html">&lt;p&gt; 有以下需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有两个独立运行的系统，用户系统(user)、发布系统(publish)&lt;/li&gt;
&lt;li&gt;publish系统中的添加内容功能模块需要选择对应的用户，那么user系统已经有了一个这样的页面，而publish系统想直接加载过来使用，并且勾选页面中的数据后可以获取已勾选的数据；&lt;/li&gt;
&lt;li&gt;因为两个系统部署在不同的服务器中运行，所以存在跨域问题&lt;/li&gt;
&lt;li&gt;解决方案主要通过反向代理的方式解决，这种方式可以避免两个系统更改大量的代码&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://soujava.com/images/kuayu.jpg&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注&lt;/strong&gt;：以上方式可以解决publish系统远程调用user系统提供的数据页面(静态页面)的跨域问题，但是如果user系统提供的页面中有js异步事件，则仍然会出现跨域问题(比如在user系统提供的选择用户的界面中，当点击左侧角色分类时，异步加载右侧的用户列表数据)；所以需要user系统提供的视图页面对应的业务处理方法中做一些微小的改动即可，在响应对象中添加如下设置：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;response.setHeader(&lt;span class=&quot;string&quot;&gt;&quot;Access-Control-Allow-Origin&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;*&quot;&lt;/span&gt;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt; 有以下需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有两个独立运行的系统，用户系统(user)、发布系统(publish)&lt;/li&gt;
&lt;li&gt;publish系统中的添加内容功能模块需要选择对应的用户，那么user系统已经有了一个这样的页面，而publish系统想直接加载过来使用，并且
    
    </summary>
    
      <category term="Nginx" scheme="http://www.soujava.com/categories/Nginx/"/>
    
    
      <category term="跨域" scheme="http://www.soujava.com/tags/%E8%B7%A8%E5%9F%9F/"/>
    
  </entry>
  
  <entry>
    <title>java通过Stream对list集合分组</title>
    <link href="http://www.soujava.com/java%E9%80%9A%E8%BF%87Stream%E5%AF%B9list%E9%9B%86%E5%90%88%E5%88%86%E7%BB%84/"/>
    <id>http://www.soujava.com/java通过Stream对list集合分组/</id>
    <published>2016-07-15T06:00:11.000Z</published>
    <updated>2016-07-15T07:22:09.367Z</updated>
    
    <content type="html">&lt;p&gt;现在有一个List集合，想对该集合中的数据分组处理，想到java8中的stream，就搞来试试，非常给力！例子如下&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.maps;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; Integer id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String type;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; String name; &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Integer id,String type,String name)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.id = id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.type = type;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;   &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Integer id)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.id = id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; Integer &lt;span class=&quot;title&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; id;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setType&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String type)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.type = type;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getType&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; type;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String name)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.name = name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; String &lt;span class=&quot;title&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; name;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.maps;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.ArrayList;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.List;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.Map;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; java.util.stream.Collectors;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MainUser&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   	&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		List&amp;lt;User&amp;gt; list = getUserList();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		Map&amp;lt;String,List&amp;lt;User&amp;gt;&amp;gt; userGroupMap = list.stream().collect(Collectors.groupingBy(User::getType));&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; List&amp;lt;User&amp;gt; &lt;span class=&quot;title&quot;&gt;getUserList&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		User user1 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;张三&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;小学&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		User user2 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;李四&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;小学&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		User user3 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;王五&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;初中&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		User user4 = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; User(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;马六&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;高中&quot;&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		List&amp;lt;User&amp;gt; list = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ArrayList&amp;lt;User&amp;gt;();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		list.add(user1);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		list.add(user2);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		list.add(user3);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		list.add(user4);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;			&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;		&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; list;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行上面例子得到下面的结果&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;高中=[com.maps.User@&lt;span class=&quot;number&quot;&gt;448139f&lt;/span&gt;0], 初中=[com.maps.User@&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;cca494b], 小学=[com.maps.User@&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;ba4f24f, com.maps.User@&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;b9a45b3]&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;是不是感觉不用for循环挺爽！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;现在有一个List集合，想对该集合中的数据分组处理，想到java8中的stream，就搞来试试，非常给力！例子如下&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div clas
    
    </summary>
    
      <category term="java" scheme="http://www.soujava.com/categories/java/"/>
    
    
      <category term="java8 Stream" scheme="http://www.soujava.com/tags/java8-Stream/"/>
    
  </entry>
  
</feed>
